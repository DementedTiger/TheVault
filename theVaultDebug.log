2022-02-18 01:06:18,994 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: newLogin
Arguments: [NewLoginCredentialsRequest()]
2022-02-18 01:06:19,014 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.LoginService
Method: createNewLogin
Arguments: [NewLoginCredentialsRequest()]
2022-02-18 01:06:19,092 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:06:19,092 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:06:19,149 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: createProfile
Arguments: [ProfileCreateRequest(userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)]
2022-02-18 01:06:19,153 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: createProfile
Arguments: [ProfileCreateRequest(userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)]
2022-02-18 01:06:19,163 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:06:19,163 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:06:25,092 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:06:25,092 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:06:25,125 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:06:25,125 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:06:25,134 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 01:06:25,134 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 01:06:25,153 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:06:25,153 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:06:25,167 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-18 01:06:25,171 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-18 01:06:25,181 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:06:25,182 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:17,786 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:07:17,786 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:07:17,787 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:07:17,788 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:07:17,797 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 01:07:17,798 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 01:07:17,799 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:07:17,799 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:07:17,804 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-18 01:07:17,804 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-18 01:07:17,806 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:17,806 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:45,957 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-18 01:07:45,958 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.AccountService
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-18 01:07:45,958 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Savings]
2022-02-18 01:07:45,964 INFO dLog [http-nio-8080-exec-3] RETURNING: AccountTypeEntity(pk_account_type_id=2, name=Savings)
2022-02-18 01:07:45,971 INFO dLog [http-nio-8080-exec-3] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-18 01:07:45,971 INFO dLog [http-nio-8080-exec-3] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-18 01:07:47,661 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-18 01:07:47,664 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-18 01:07:47,666 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-18 01:07:47,672 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:47,673 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-18 01:07:47,679 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:47,680 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:47,680 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:55,591 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-18 01:07:55,591 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-18 01:07:55,592 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-18 01:07:55,593 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:55,593 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-18 01:07:55,594 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:55,595 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:55,596 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:07:59,994 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=asdfasfd, amount=34.0)]
2022-02-18 01:07:59,999 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.DepositService
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=asdfasfd, amount=34.0)]
2022-02-18 01:08:00,000 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.DepositTypeService
Method: findDepositTypeEntityByName
Arguments: [Cheque]
2022-02-18 01:08:00,004 INFO dLog [http-nio-8080-exec-7] RETURNING: DepositTypeEntity(pk_deposit_type_id=2, name=Cheque)
2022-02-18 01:08:00,025 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasfd, dateDeposit=2022-02-18, amount=34.0)])
2022-02-18 01:08:00,026 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasfd, dateDeposit=2022-02-18, amount=34.0)])
2022-02-18 01:08:00,041 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-18 01:08:00,041 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-18 01:08:00,041 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-18 01:08:00,042 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Savings, availableBalance=34, pendingBalance=34)]
2022-02-18 01:08:00,042 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountService
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Savings, availableBalance=34, pendingBalance=34)]
2022-02-18 01:08:00,045 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasfd, dateDeposit=2022-02-18, amount=34.0)])
2022-02-18 01:08:00,045 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-18 01:08:00,046 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:08:00,046 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=34.0)])
2022-02-18 01:08:00,046 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=34.0)])
2022-02-18 01:08:00,050 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Savings]
2022-02-18 01:08:00,051 INFO dLog [http-nio-8080-exec-10] RETURNING: AccountTypeEntity(pk_account_type_id=2, name=Savings)
2022-02-18 01:08:00,061 INFO dLog [http-nio-8080-exec-10] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=34.0, pendingBalance=34.0)])
2022-02-18 01:08:00,061 INFO dLog [http-nio-8080-exec-10] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=34.0, pendingBalance=34.0)])
2022-02-18 01:09:48,634 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:09:48,634 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:09:48,636 INFO dLog [http-nio-8080-exec-3] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:09:48,636 INFO dLog [http-nio-8080-exec-3] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:09:48,645 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 01:09:48,646 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 01:09:48,647 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:09:48,647 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:10:48,505 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:10:48,505 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:10:48,506 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:10:48,507 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:10:48,513 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 01:10:48,513 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 01:10:48,514 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:10:48,514 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:12:46,693 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:12:46,693 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:12:46,694 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:12:46,694 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:12:46,703 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 01:12:46,703 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 01:12:46,704 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:12:46,705 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:13:51,615 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:13:51,616 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:13:51,616 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:13:51,616 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:13:51,624 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 01:13:51,624 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 01:13:51,625 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:13:51,625 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:14:27,935 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:14:27,936 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:14:27,937 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:14:27,937 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:14:27,944 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 01:14:27,945 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 01:14:27,946 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:14:27,946 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:15:07,362 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:15:07,363 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:15:07,364 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:15:07,364 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:15:07,371 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 01:15:07,371 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 01:15:07,372 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:15:07,372 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:15:07,378 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-18 01:15:07,379 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-18 01:15:07,381 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=34.0, pendingBalance=34.0)])
2022-02-18 01:15:07,381 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=34.0, pendingBalance=34.0)])
2022-02-18 01:17:23,881 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:17:23,881 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 01:17:23,882 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:17:23,883 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 01:17:23,892 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 01:17:23,892 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 01:17:23,894 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:17:23,894 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdfasdf, lastName=asdfasfd, email=asdfasd@asdfasfd.com, phoneNumber=123123, address=123asdfasf)])
2022-02-18 01:17:23,901 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-18 01:17:23,901 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-18 01:17:23,903 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=34.0, pendingBalance=34.0)])
2022-02-18 01:17:23,903 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=34.0, pendingBalance=34.0)])
2022-02-18 01:17:27,090 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-18 01:17:27,091 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-18 01:17:27,091 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-18 01:17:27,093 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasfd, dateDeposit=2022-02-18, amount=34.0)])
2022-02-18 01:17:27,094 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-18 01:17:27,094 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[])
2022-02-18 01:17:27,094 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=34.0)])
2022-02-18 01:17:27,094 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=34.0)])
2022-02-18 14:28:01,132 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: newLogin
Arguments: [NewLoginCredentialsRequest()]
2022-02-18 14:28:01,142 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.LoginService
Method: createNewLogin
Arguments: [NewLoginCredentialsRequest()]
2022-02-18 14:28:01,210 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 14:28:01,210 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 14:28:01,256 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: createProfile
Arguments: [ProfileCreateRequest(userId=1, firstName=asdf, lastName=asdf, email=email@fasdf.com, phoneNumber=123412, address=asdfasdf)]
2022-02-18 14:28:01,260 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: createProfile
Arguments: [ProfileCreateRequest(userId=1, firstName=asdf, lastName=asdf, email=email@fasdf.com, phoneNumber=123412, address=asdfasdf)]
2022-02-18 14:28:01,269 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdf, lastName=asdf, email=email@fasdf.com, phoneNumber=123412, address=asdfasdf)])
2022-02-18 14:28:01,269 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdf, lastName=asdf, email=email@fasdf.com, phoneNumber=123412, address=asdfasdf)])
2022-02-18 14:28:07,830 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 14:28:07,830 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username, password=password)]
2022-02-18 14:28:07,860 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 14:28:07,860 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username, password=password)])
2022-02-18 14:28:07,869 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-18 14:28:07,869 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-18 14:28:07,888 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdf, lastName=asdf, email=email@fasdf.com, phoneNumber=123412, address=asdfasdf)])
2022-02-18 14:28:07,888 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=asdf, lastName=asdf, email=email@fasdf.com, phoneNumber=123412, address=asdfasdf)])
2022-02-18 14:28:07,900 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-18 14:28:07,903 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-18 14:28:07,910 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-18 14:28:07,910 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-18 14:28:10,088 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=)]
2022-02-18 14:28:10,089 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountService
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=)]
2022-02-18 14:28:10,089 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: []
2022-02-18 14:28:10,093 ERROR dLog [http-nio-8080-exec-10] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
2022-02-18 14:28:10,093 ERROR dLog [http-nio-8080-exec-10] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
2022-02-18 14:28:10,093 ERROR dLog [http-nio-8080-exec-10] CONTROLLER CLASS: class com.revature.thevault.presentation.controller.AccountController
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
2022-02-18 14:28:13,293 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-18 14:28:13,293 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountService
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-18 14:28:13,293 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Checking]
2022-02-18 14:28:13,294 INFO dLog [http-nio-8080-exec-1] RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-18 14:28:13,302 INFO dLog [http-nio-8080-exec-1] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-18 14:28:13,302 INFO dLog [http-nio-8080-exec-1] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-18 14:28:15,562 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-18 14:28:15,564 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-18 14:28:15,566 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-18 14:28:15,573 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[])
2022-02-18 14:28:15,573 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-18 14:28:15,579 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[])
2022-02-18 14:28:15,580 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[])
2022-02-18 14:28:15,580 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[])
2022-02-18 14:28:22,056 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=asdfasfd, amount=33.0)]
2022-02-18 14:28:22,058 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.DepositService
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=asdfasfd, amount=33.0)]
2022-02-18 14:28:22,058 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.DepositTypeService
Method: findDepositTypeEntityByName
Arguments: [Cheque]
2022-02-18 14:28:22,062 INFO dLog [http-nio-8080-exec-4] RETURNING: DepositTypeEntity(pk_deposit_type_id=2, name=Cheque)
2022-02-18 14:28:22,080 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasfd, dateDeposit=2022-02-18, amount=33.0)])
2022-02-18 14:28:22,080 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasfd, dateDeposit=2022-02-18, amount=33.0)])
2022-02-18 14:28:22,090 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=33, pendingBalance=33)]
2022-02-18 14:28:22,090 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountService
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=33, pendingBalance=33)]
2022-02-18 14:28:22,099 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Checking]
2022-02-18 14:28:22,101 INFO dLog [http-nio-8080-exec-6] RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-18 14:28:22,112 INFO dLog [http-nio-8080-exec-6] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=33.0, pendingBalance=33.0)])
2022-02-18 14:28:22,113 INFO dLog [http-nio-8080-exec-6] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=33.0, pendingBalance=33.0)])
2022-02-18 14:28:22,121 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-18 14:28:22,121 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-18 14:28:22,121 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-18 14:28:22,125 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasfd, dateDeposit=2022-02-18, amount=33.0)])
2022-02-18 14:28:22,125 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-18 14:28:22,127 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[])
2022-02-18 14:28:22,127 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=33.0)])
2022-02-18 14:28:22,127 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=33.0)])
2022-02-18 14:28:30,014 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-18 14:28:30,014 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-18 14:28:30,014 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-18 14:28:30,016 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasfd, dateDeposit=2022-02-18, amount=33.0)])
2022-02-18 14:28:30,016 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-18 14:28:30,017 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-18 14:28:30,017 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=33.0)])
2022-02-18 14:28:30,017 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=33.0)])
2022-02-18 14:28:38,781 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=Hi there, amount=34234.0)]
2022-02-18 14:28:38,781 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.DepositService
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=Hi there, amount=34234.0)]
2022-02-18 14:28:38,781 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.DepositTypeService
Method: findDepositTypeEntityByName
Arguments: [Cheque]
2022-02-18 14:28:38,782 INFO dLog [http-nio-8080-exec-9] RETURNING: DepositTypeEntity(pk_deposit_type_id=2, name=Cheque)
2022-02-18 14:28:38,785 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=2, accountId=1, depositType=Cheque, reference=Hi there, dateDeposit=2022-02-18, amount=34234.0)])
2022-02-18 14:28:38,785 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=2, accountId=1, depositType=Cheque, reference=Hi there, dateDeposit=2022-02-18, amount=34234.0)])
2022-02-18 14:28:38,790 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=34267, pendingBalance=34267)]
2022-02-18 14:28:38,790 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountService
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=34267, pendingBalance=34267)]
2022-02-18 14:28:38,792 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Checking]
2022-02-18 14:28:38,793 INFO dLog [http-nio-8080-exec-10] RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-18 14:28:38,794 INFO dLog [http-nio-8080-exec-10] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=34267.0, pendingBalance=34267.0)])
2022-02-18 14:28:38,794 INFO dLog [http-nio-8080-exec-10] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=34267.0, pendingBalance=34267.0)])
2022-02-18 14:28:38,800 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-18 14:28:38,800 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-18 14:28:38,800 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-18 14:28:38,804 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasfd, dateDeposit=2022-02-18, amount=33.0), DepositResponseObject(depositId=2, accountId=1, depositType=Cheque, reference=Hi there, dateDeposit=2022-02-18, amount=34234.0)])
2022-02-18 14:28:38,804 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-18 14:28:38,805 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[])
2022-02-18 14:28:38,805 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=33.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionReference=Hi there, date=2022-02-18, amount=34234.0)])
2022-02-18 14:28:38,805 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasfd, date=2022-02-18, amount=33.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionReference=Hi there, date=2022-02-18, amount=34234.0)])
2022-02-20 12:59:24,132 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 12:59:24,142 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 12:59:24,198 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 12:59:24,198 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 12:59:24,238 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 12:59:24,243 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 12:59:24,275 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 12:59:24,275 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 12:59:24,287 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 12:59:24,291 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 12:59:24,302 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[])
2022-02-20 12:59:24,302 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[])
2022-02-20 12:59:27,788 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-20 12:59:27,788 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountService
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-20 12:59:27,788 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Savings]
2022-02-20 12:59:27,792 INFO dLog [http-nio-8080-exec-6] RETURNING: AccountTypeEntity(pk_account_type_id=2, name=Savings)
2022-02-20 12:59:27,821 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 12:59:27,822 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 12:59:31,327 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 12:59:31,327 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountService
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 12:59:31,328 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Checking]
2022-02-20 12:59:31,329 INFO dLog [http-nio-8080-exec-7] RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-20 12:59:31,331 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 12:59:31,331 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 12:59:33,577 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 12:59:33,579 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 12:59:33,581 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 12:59:33,587 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 12:59:33,587 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 12:59:33,594 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 12:59:33,596 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 12:59:33,596 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 12:59:44,847 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=asdfasdf, amount=100.0)]
2022-02-20 12:59:44,850 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.DepositService
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=asdfasdf, amount=100.0)]
2022-02-20 12:59:44,850 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.DepositTypeService
Method: findDepositTypeEntityByName
Arguments: [Cheque]
2022-02-20 12:59:44,855 INFO dLog [http-nio-8080-exec-10] RETURNING: DepositTypeEntity(pk_deposit_type_id=2, name=Cheque)
2022-02-20 12:59:44,868 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 12:59:44,868 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 12:59:44,879 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Savings, availableBalance=100, pendingBalance=100)]
2022-02-20 12:59:44,879 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountService
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Savings, availableBalance=100, pendingBalance=100)]
2022-02-20 12:59:44,884 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Savings]
2022-02-20 12:59:44,885 INFO dLog [http-nio-8080-exec-2] RETURNING: AccountTypeEntity(pk_account_type_id=2, name=Savings)
2022-02-20 12:59:44,894 INFO dLog [http-nio-8080-exec-2] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 12:59:44,894 INFO dLog [http-nio-8080-exec-2] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 12:59:44,901 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 12:59:44,901 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 12:59:44,902 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 12:59:44,905 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 12:59:44,906 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 12:59:44,907 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[])
2022-02-20 12:59:44,908 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 12:59:44,908 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:18:32,357 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:18:32,357 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:18:32,358 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:18:32,359 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:18:32,366 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:18:32,366 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:18:32,368 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:18:32,368 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:18:32,374 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:18:32,374 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:18:32,377 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:18:32,377 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:18:34,479 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:18:34,480 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:18:34,480 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:18:34,482 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:18:34,482 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:18:34,483 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:18:34,483 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:18:34,483 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:20:03,396 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:20:03,396 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:20:03,397 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:20:03,397 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:20:03,403 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:20:03,403 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:20:03,405 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:20:03,405 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:20:03,411 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:20:03,411 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:20:03,413 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:20:03,414 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:20:05,441 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:20:05,441 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:20:05,441 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:20:05,444 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:20:05,444 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:20:05,444 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:20:05,445 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:20:05,445 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:22:47,705 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:22:47,706 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:22:47,706 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:22:47,707 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:22:47,713 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:22:47,713 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:22:47,714 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:22:47,714 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:22:47,720 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:22:47,720 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:22:47,722 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:22:47,723 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:22:49,258 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:22:49,259 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:22:49,259 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:22:49,264 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:22:49,264 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:22:49,265 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:22:49,265 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:22:49,265 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:23:14,659 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:23:14,659 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:23:14,660 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:23:14,660 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:23:14,666 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:23:14,666 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:23:14,667 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:23:14,667 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:23:14,674 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:23:14,674 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:23:14,676 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:23:14,676 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:23:16,201 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:23:16,201 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:23:16,201 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:23:16,204 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:23:16,204 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:23:16,204 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:23:16,205 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:23:16,205 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:30:25,540 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:30:25,540 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:30:25,541 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:30:25,541 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:30:25,547 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:30:25,547 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:30:25,548 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:30:25,549 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:30:25,555 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:30:25,555 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:30:25,557 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:30:25,558 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:30:26,966 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:30:26,966 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:30:26,966 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:30:26,968 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:30:26,968 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:30:26,969 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:30:26,969 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:30:26,969 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:33:32,690 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:33:32,690 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:33:32,691 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:33:32,692 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:33:32,698 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:33:32,698 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:33:32,699 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:33:32,699 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:33:32,705 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:33:32,705 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:33:32,706 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:33:32,707 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:33:33,984 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:33:33,984 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:33:33,984 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:33:33,985 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:33:33,986 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:33:33,986 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:33:33,986 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:33:33,986 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:39:47,912 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:39:47,913 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:39:47,914 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:39:47,914 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:39:47,920 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:39:47,920 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:39:47,921 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:39:47,922 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:39:47,927 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:39:47,927 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:39:47,930 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:39:47,930 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:39:50,382 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:39:50,383 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:39:50,383 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:39:50,384 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:39:50,384 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:39:50,385 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:39:50,385 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:39:50,385 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:40:30,178 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:40:30,178 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:40:30,179 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:40:30,179 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:40:30,184 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:40:30,184 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:40:30,185 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:40:30,185 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:40:30,191 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:40:30,191 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:40:30,193 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:40:30,193 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:40:30,950 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:40:30,950 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:40:30,950 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:40:30,952 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:40:30,952 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:40:30,953 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:40:30,953 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:40:30,953 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:40:52,923 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:40:52,923 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:40:52,925 INFO dLog [http-nio-8080-exec-3] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:40:52,925 INFO dLog [http-nio-8080-exec-3] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:40:52,932 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:40:52,933 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:40:52,934 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:40:52,935 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:40:52,943 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:40:52,943 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:40:52,945 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:40:52,945 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:40:53,918 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:40:53,918 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:40:53,919 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:40:53,921 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:40:53,921 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:40:53,922 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:40:53,922 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:40:53,922 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:41:15,004 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:41:15,004 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:41:15,006 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:41:15,006 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:41:15,021 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:41:15,021 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:41:15,024 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:41:15,025 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:41:15,050 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:41:15,050 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:41:15,057 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:41:15,060 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:41:17,082 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:41:17,082 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:41:17,082 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:41:17,087 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:41:17,088 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:41:17,089 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:41:17,090 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:41:17,090 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:44:03,469 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:44:03,470 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:44:03,473 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:44:03,473 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:44:03,490 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:44:03,490 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:44:03,494 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:44:03,495 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:44:03,517 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:44:03,517 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:44:03,523 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:44:03,524 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:44:05,454 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:44:05,455 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:44:05,455 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:44:05,462 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:44:05,462 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:44:05,464 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:44:05,465 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:44:05,465 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:45:02,076 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:45:02,076 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 13:45:02,078 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:45:02,079 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 13:45:02,097 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 13:45:02,098 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 13:45:02,102 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:45:02,103 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 13:45:02,125 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 13:45:02,126 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 13:45:02,133 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:45:02,133 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Savings, availableBalance=100.0, pendingBalance=100.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 13:45:03,899 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:45:03,899 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 13:45:03,900 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 13:45:03,907 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfasdf, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 13:45:03,908 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 13:45:03,910 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[])
2022-02-20 13:45:03,910 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:45:03,910 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=asdfasdf, date=2022-02-20, amount=100.0)])
2022-02-20 13:45:19,909 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: transferToAccount
Arguments: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=200)]
2022-02-20 13:45:19,910 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountService
Method: transferToAnotherAccount
Arguments: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=200)]
2022-02-20 13:45:19,915 ERROR dLog [http-nio-8080-exec-1] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAmountException
2022-02-20 13:45:19,916 ERROR dLog [http-nio-8080-exec-1] CONTROLLER CLASS: class com.revature.thevault.presentation.controller.AccountController
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAmountException
2022-02-20 14:18:14,627 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:18:14,656 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:18:14,831 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:18:14,831 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:18:14,956 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 14:18:14,972 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 14:18:15,048 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:18:15,049 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:18:15,085 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 14:18:15,099 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 14:18:15,138 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:18:15,139 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:18:18,439 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 14:18:18,440 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountService
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 14:18:18,440 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Checking]
2022-02-20 14:18:18,453 INFO dLog [http-nio-8080-exec-6] RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-20 14:18:18,540 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:18:18,541 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:18:20,885 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-20 14:18:20,886 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountService
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-20 14:18:20,886 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Savings]
2022-02-20 14:18:20,889 INFO dLog [http-nio-8080-exec-7] RETURNING: AccountTypeEntity(pk_account_type_id=2, name=Savings)
2022-02-20 14:18:20,894 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:18:20,895 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:18:22,262 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:18:22,268 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:18:22,275 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:18:22,293 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:18:22,293 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:18:22,318 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:18:22,321 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:18:22,321 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:18:35,031 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=starting off, amount=10000.0)]
2022-02-20 14:18:35,039 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.DepositService
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=starting off, amount=10000.0)]
2022-02-20 14:18:35,040 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.DepositTypeService
Method: findDepositTypeEntityByName
Arguments: [Cheque]
2022-02-20 14:18:35,054 INFO dLog [http-nio-8080-exec-10] RETURNING: DepositTypeEntity(pk_deposit_type_id=2, name=Cheque)
2022-02-20 14:18:35,100 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=starting off, dateDeposit=2022-02-20, amount=10000.0)])
2022-02-20 14:18:35,100 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=starting off, dateDeposit=2022-02-20, amount=10000.0)])
2022-02-20 14:18:35,133 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=10000, pendingBalance=10000)]
2022-02-20 14:18:35,133 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountService
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=10000, pendingBalance=10000)]
2022-02-20 14:18:35,149 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Checking]
2022-02-20 14:18:35,153 INFO dLog [http-nio-8080-exec-2] RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-20 14:18:35,173 INFO dLog [http-nio-8080-exec-2] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=10000.0, pendingBalance=10000.0)])
2022-02-20 14:18:35,174 INFO dLog [http-nio-8080-exec-2] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=10000.0, pendingBalance=10000.0)])
2022-02-20 14:18:35,191 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:18:35,192 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:18:35,193 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:18:35,202 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=starting off, dateDeposit=2022-02-20, amount=10000.0)])
2022-02-20 14:18:35,202 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:18:35,206 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:18:35,207 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=starting off, date=2022-02-20, amount=10000.0)])
2022-02-20 14:18:35,208 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=starting off, date=2022-02-20, amount=10000.0)])
2022-02-20 14:18:46,791 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Transfer, reference=Transfer to Account: 2, amount=99.0)]
2022-02-20 14:18:46,799 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.WithdrawService
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Transfer, reference=Transfer to Account: 2, amount=99.0)]
2022-02-20 14:18:46,800 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.RequestTypeService
Method: getRequestTypeByName
Arguments: [Transfer]
2022-02-20 14:18:46,815 INFO dLog [http-nio-8080-exec-5] RETURNING: RequestTypeEntity(pk_request_type_id=3, name=Transfer)
2022-02-20 14:18:46,815 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.RequestStatusService
Method: getRequestStatusByName
Arguments: [Pending]
2022-02-20 14:18:46,833 INFO dLog [http-nio-8080-exec-5] RETURNING: RequestStatusEntity(pk_request_status_id=1, name=Pending)
2022-02-20 14:18:46,846 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=99.0)])
2022-02-20 14:18:46,847 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=99.0)])
2022-02-20 14:18:46,869 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Transfer, accountId=2, reference=Transer from Account: 1, amount=99.0)]
2022-02-20 14:18:46,869 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.DepositService
Method: createDeposit
Arguments: [DepositRequest(depositType=Transfer, accountId=2, reference=Transer from Account: 1, amount=99.0)]
2022-02-20 14:18:46,870 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.DepositTypeService
Method: findDepositTypeEntityByName
Arguments: [Transfer]
2022-02-20 14:18:46,874 INFO dLog [http-nio-8080-exec-6] RETURNING: DepositTypeEntity(pk_deposit_type_id=4, name=Transfer)
2022-02-20 14:18:46,882 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=2, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=99.0)])
2022-02-20 14:18:46,882 INFO dLog [http-nio-8080-exec-6] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=2, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=99.0)])
2022-02-20 14:18:46,913 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: transferToAccount
Arguments: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=99)]
2022-02-20 14:18:46,914 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.AccountService
Method: transferToAnotherAccount
Arguments: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=99)]
2022-02-20 14:18:46,932 INFO dLog [http-nio-8080-exec-8] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=9901.0, pendingBalance=9901.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=99.0)])
2022-02-20 14:18:46,933 INFO dLog [http-nio-8080-exec-8] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=9901.0, pendingBalance=9901.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=99.0)])
2022-02-20 14:18:46,949 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:18:46,950 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:18:46,950 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:18:46,957 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=starting off, dateDeposit=2022-02-20, amount=10000.0)])
2022-02-20 14:18:46,958 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:18:46,964 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=99.0)])
2022-02-20 14:18:46,965 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=starting off, date=2022-02-20, amount=10000.0), TransactionObject(transactionId=1, transactionType=Withdrawal, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=99.0)])
2022-02-20 14:18:46,965 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionReference=starting off, date=2022-02-20, amount=10000.0), TransactionObject(transactionId=1, transactionType=Withdrawal, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=99.0)])
2022-02-20 14:20:02,405 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [2]
2022-02-20 14:20:02,405 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [2]
2022-02-20 14:20:02,406 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [2]
2022-02-20 14:20:02,410 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=2, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=99.0)])
2022-02-20 14:20:02,411 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [2]
2022-02-20 14:20:02,412 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:20:02,413 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=2, transactionType=Deposit, transactionReference=Transer from Account: 1, date=2022-02-20, amount=99.0)])
2022-02-20 14:20:02,413 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=2, transactionType=Deposit, transactionReference=Transer from Account: 1, date=2022-02-20, amount=99.0)])
2022-02-20 14:20:12,079 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:20:12,079 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:20:12,082 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:20:12,082 INFO dLog [http-nio-8080-exec-2] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:20:12,099 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 14:20:12,099 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 14:20:12,103 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:20:12,105 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:20:12,131 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 14:20:12,131 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 14:20:12,137 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=9901.0, pendingBalance=9901.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=99.0)])
2022-02-20 14:20:12,138 INFO dLog [http-nio-8080-exec-4] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=9901.0, pendingBalance=9901.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=99.0)])
2022-02-20 14:20:14,226 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [2]
2022-02-20 14:20:14,227 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [2]
2022-02-20 14:20:14,227 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [2]
2022-02-20 14:20:14,234 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=2, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=99.0)])
2022-02-20 14:20:14,234 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [2]
2022-02-20 14:20:14,236 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:20:14,237 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=2, transactionType=Deposit, transactionReference=Transer from Account: 1, date=2022-02-20, amount=99.0)])
2022-02-20 14:20:14,237 INFO dLog [http-nio-8080-exec-5] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=2, transactionType=Deposit, transactionReference=Transer from Account: 1, date=2022-02-20, amount=99.0)])
2022-02-20 14:27:19,837 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:27:19,879 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:27:20,077 INFO dLog [http-nio-8080-exec-1] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:27:20,078 INFO dLog [http-nio-8080-exec-1] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:27:20,206 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 14:27:20,218 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 14:27:20,307 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:27:20,308 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:27:20,351 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 14:27:20,363 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 14:27:20,394 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:27:20,395 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:27:30,983 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 14:27:30,983 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountService
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 14:27:30,983 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Checking]
2022-02-20 14:27:30,997 INFO dLog [http-nio-8080-exec-4] RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-20 14:27:31,083 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:27:31,084 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:27:33,072 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 14:27:33,072 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.AccountService
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 14:27:33,073 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Checking]
2022-02-20 14:27:33,075 INFO dLog [http-nio-8080-exec-5] RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-20 14:27:33,080 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:27:33,080 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:27:35,983 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:27:35,990 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:27:35,997 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:27:36,017 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:27:36,018 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:27:36,039 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:27:36,044 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:27:36,045 INFO dLog [http-nio-8080-exec-6] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:27:49,021 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Cash, accountId=1, reference=hi there, amount=23933.0)]
2022-02-20 14:27:49,030 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.DepositService
Method: createDeposit
Arguments: [DepositRequest(depositType=Cash, accountId=1, reference=hi there, amount=23933.0)]
2022-02-20 14:27:49,031 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.DepositTypeService
Method: findDepositTypeEntityByName
Arguments: [Cash]
2022-02-20 14:27:49,046 INFO dLog [http-nio-8080-exec-7] RETURNING: DepositTypeEntity(pk_deposit_type_id=1, name=Cash)
2022-02-20 14:27:49,100 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=hi there, dateDeposit=2022-02-20, amount=23933.0)])
2022-02-20 14:27:49,101 INFO dLog [http-nio-8080-exec-7] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=hi there, dateDeposit=2022-02-20, amount=23933.0)])
2022-02-20 14:27:49,135 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=23933, pendingBalance=23933)]
2022-02-20 14:27:49,135 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.AccountService
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=23933, pendingBalance=23933)]
2022-02-20 14:27:49,162 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.AccountTypeService
Method: findAccountTypeEntityByName
Arguments: [Checking]
2022-02-20 14:27:49,165 INFO dLog [http-nio-8080-exec-8] RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-20 14:27:49,189 INFO dLog [http-nio-8080-exec-8] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=23933.0, pendingBalance=23933.0)])
2022-02-20 14:27:49,189 INFO dLog [http-nio-8080-exec-8] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=23933.0, pendingBalance=23933.0)])
2022-02-20 14:27:49,209 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:27:49,210 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:27:49,212 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:27:49,225 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=hi there, dateDeposit=2022-02-20, amount=23933.0)])
2022-02-20 14:27:49,225 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:27:49,230 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:27:49,232 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0)])
2022-02-20 14:27:49,233 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0)])
2022-02-20 14:28:00,913 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:28:00,914 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:28:00,918 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:28:00,918 INFO dLog [http-nio-8080-exec-10] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:28:00,939 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 14:28:00,939 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 14:28:00,945 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:28:00,945 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:28:00,973 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 14:28:00,974 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 14:28:00,981 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=23933.0, pendingBalance=23933.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:28:00,981 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=23933.0, pendingBalance=23933.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-20 14:28:03,287 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:28:03,287 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:28:03,287 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:28:03,294 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=hi there, dateDeposit=2022-02-20, amount=23933.0)])
2022-02-20 14:28:03,294 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:28:03,296 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:28:03,297 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0)])
2022-02-20 14:28:03,297 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0)])
2022-02-20 14:28:10,374 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Transfer, reference=Transfer to Account: 2, amount=999.0)]
2022-02-20 14:28:10,384 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.WithdrawService
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Transfer, reference=Transfer to Account: 2, amount=999.0)]
2022-02-20 14:28:10,384 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.RequestTypeService
Method: getRequestTypeByName
Arguments: [Transfer]
2022-02-20 14:28:10,402 INFO dLog [http-nio-8080-exec-4] RETURNING: RequestTypeEntity(pk_request_type_id=3, name=Transfer)
2022-02-20 14:28:10,403 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.RequestStatusService
Method: getRequestStatusByName
Arguments: [Pending]
2022-02-20 14:28:10,423 INFO dLog [http-nio-8080-exec-4] RETURNING: RequestStatusEntity(pk_request_status_id=1, name=Pending)
2022-02-20 14:28:10,451 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=999.0)])
2022-02-20 14:28:10,452 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=999.0)])
2022-02-20 14:28:10,496 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Transfer, accountId=2, reference=Transer from Account: 1, amount=999.0)]
2022-02-20 14:28:10,496 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.DepositService
Method: createDeposit
Arguments: [DepositRequest(depositType=Transfer, accountId=2, reference=Transer from Account: 1, amount=999.0)]
2022-02-20 14:28:10,496 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.DepositTypeService
Method: findDepositTypeEntityByName
Arguments: [Transfer]
2022-02-20 14:28:10,500 INFO dLog [http-nio-8080-exec-5] RETURNING: DepositTypeEntity(pk_deposit_type_id=4, name=Transfer)
2022-02-20 14:28:10,507 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=2, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=999.0)])
2022-02-20 14:28:10,508 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=2, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=999.0)])
2022-02-20 14:28:10,538 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: transferToAccount
Arguments: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=999)]
2022-02-20 14:28:10,538 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountService
Method: transferToAnotherAccount
Arguments: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=999)]
2022-02-20 14:28:10,554 INFO dLog [http-nio-8080-exec-6] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22934.0, pendingBalance=22934.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=999.0)])
2022-02-20 14:28:10,555 INFO dLog [http-nio-8080-exec-6] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22934.0, pendingBalance=22934.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=999.0)])
2022-02-20 14:28:10,575 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:28:10,575 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:28:10,575 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:28:10,581 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=hi there, dateDeposit=2022-02-20, amount=23933.0)])
2022-02-20 14:28:10,581 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:28:10,586 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=999.0)])
2022-02-20 14:28:10,587 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=999.0)])
2022-02-20 14:28:10,587 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=999.0)])
2022-02-20 14:30:31,418 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:30:31,418 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.LoginService
Method: getLoginCredentialFromLogin
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-20 14:30:31,422 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:30:31,422 INFO dLog [http-nio-8080-exec-9] RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 14:30:31,442 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-20 14:30:31,443 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountProfileService
Method: getProfile
Arguments: [AccountProfileRequest(profileId=1)]
2022-02-20 14:30:31,448 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:30:31,448 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-20 14:30:31,475 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 14:30:31,476 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 14:30:31,483 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22934.0, pendingBalance=22934.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=999.0)])
2022-02-20 14:30:31,483 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22934.0, pendingBalance=22934.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=999.0)])
2022-02-20 14:30:31,533 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 14:30:31,534 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 14:30:31,539 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22934.0, pendingBalance=22934.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=999.0)])
2022-02-20 14:30:31,540 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22934.0, pendingBalance=22934.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=999.0)])
2022-02-20 14:30:33,578 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:30:33,579 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:30:33,579 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:30:33,587 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=hi there, dateDeposit=2022-02-20, amount=23933.0)])
2022-02-20 14:30:33,588 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:30:33,594 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=999.0)])
2022-02-20 14:30:33,594 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=999.0)])
2022-02-20 14:30:33,595 INFO dLog [http-nio-8080-exec-3] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=999.0)])
2022-02-20 14:30:39,168 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Transfer, reference=Transfer to Account: 2, amount=99.0)]
2022-02-20 14:30:39,168 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.WithdrawService
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Transfer, reference=Transfer to Account: 2, amount=99.0)]
2022-02-20 14:30:39,169 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.RequestTypeService
Method: getRequestTypeByName
Arguments: [Transfer]
2022-02-20 14:30:39,171 INFO dLog [http-nio-8080-exec-4] RETURNING: RequestTypeEntity(pk_request_type_id=3, name=Transfer)
2022-02-20 14:30:39,171 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.service.classes.RequestStatusService
Method: getRequestStatusByName
Arguments: [Pending]
2022-02-20 14:30:39,173 INFO dLog [http-nio-8080-exec-4] RETURNING: RequestStatusEntity(pk_request_status_id=1, name=Pending)
2022-02-20 14:30:39,179 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=2, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=99.0)])
2022-02-20 14:30:39,180 INFO dLog [http-nio-8080-exec-4] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=2, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=99.0)])
2022-02-20 14:30:39,239 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Transfer, accountId=2, reference=Transer from Account: 1, amount=99.0)]
2022-02-20 14:30:39,239 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.DepositService
Method: createDeposit
Arguments: [DepositRequest(depositType=Transfer, accountId=2, reference=Transer from Account: 1, amount=99.0)]
2022-02-20 14:30:39,239 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.service.classes.DepositTypeService
Method: findDepositTypeEntityByName
Arguments: [Transfer]
2022-02-20 14:30:39,242 INFO dLog [http-nio-8080-exec-5] RETURNING: DepositTypeEntity(pk_deposit_type_id=4, name=Transfer)
2022-02-20 14:30:39,249 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=3, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=99.0)])
2022-02-20 14:30:39,250 INFO dLog [http-nio-8080-exec-5] RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=3, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=99.0)])
2022-02-20 14:30:39,274 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: transferToAccount
Arguments: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=99)]
2022-02-20 14:30:39,274 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.service.classes.AccountService
Method: transferToAnotherAccount
Arguments: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=99)]
2022-02-20 14:30:39,293 INFO dLog [http-nio-8080-exec-6] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22835.0, pendingBalance=22835.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=1098.0)])
2022-02-20 14:30:39,293 INFO dLog [http-nio-8080-exec-6] RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22835.0, pendingBalance=22835.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=1098.0)])
2022-02-20 14:30:39,310 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:30:39,311 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:30:39,311 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:30:39,317 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=hi there, dateDeposit=2022-02-20, amount=23933.0)])
2022-02-20 14:30:39,318 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:30:39,325 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=999.0), WithdrawResponseObject(withdrawId=2, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=99.0)])
2022-02-20 14:30:39,325 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=999.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=99.0)])
2022-02-20 14:30:39,326 INFO dLog [http-nio-8080-exec-7] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=999.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=99.0)])
2022-02-20 14:30:41,158 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 14:30:41,159 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 14:30:41,169 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22835.0, pendingBalance=22835.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=1098.0)])
2022-02-20 14:30:41,169 INFO dLog [http-nio-8080-exec-8] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22835.0, pendingBalance=22835.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=1098.0)])
2022-02-20 14:30:43,010 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [2]
2022-02-20 14:30:43,011 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [2]
2022-02-20 14:30:43,011 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [2]
2022-02-20 14:30:43,019 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=2, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=999.0), DepositResponseObject(depositId=3, accountId=2, depositType=Transfer, reference=Transer from Account: 1, dateDeposit=2022-02-20, amount=99.0)])
2022-02-20 14:30:43,020 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [2]
2022-02-20 14:30:43,022 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[])
2022-02-20 14:30:43,022 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Transfer, transactionReference=Transer from Account: 1, date=2022-02-20, amount=999.0), TransactionObject(transactionId=3, transactionType=Deposit, transactionDetail=Transfer, transactionReference=Transer from Account: 1, date=2022-02-20, amount=99.0)])
2022-02-20 14:30:43,022 INFO dLog [http-nio-8080-exec-9] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Transfer, transactionReference=Transer from Account: 1, date=2022-02-20, amount=999.0), TransactionObject(transactionId=3, transactionType=Deposit, transactionDetail=Transfer, transactionReference=Transer from Account: 1, date=2022-02-20, amount=99.0)])
2022-02-20 14:30:49,547 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 14:30:49,547 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 14:30:49,554 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22835.0, pendingBalance=22835.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=1098.0)])
2022-02-20 14:30:49,554 INFO dLog [http-nio-8080-exec-10] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22835.0, pendingBalance=22835.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=1098.0)])
2022-02-20 14:30:51,074 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:30:51,074 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.TransactionService
Method: getTransactionHistory
Arguments: [1]
2022-02-20 14:30:51,074 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.DepositService
Method: getAllUserDeposits
Arguments: [1]
2022-02-20 14:30:51,080 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=hi there, dateDeposit=2022-02-20, amount=23933.0)])
2022-02-20 14:30:51,080 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 14:30:51,085 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=999.0), WithdrawResponseObject(withdrawId=2, accountId=1, requestType=Transfer, requestStatus=Pending, reference=Transfer to Account: 2, dateWithdraw=2022-02-20, amount=99.0)])
2022-02-20 14:30:51,086 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=999.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=99.0)])
2022-02-20 14:30:51,086 INFO dLog [http-nio-8080-exec-1] RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=hi there, date=2022-02-20, amount=23933.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=999.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Transfer, transactionReference=Transfer to Account: 2, date=2022-02-20, amount=99.0)])
2022-02-20 14:31:21,344 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-20 14:31:21,344 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.service.classes.AccountService
Method: getAccounts
Arguments: [1]
2022-02-20 14:31:21,351 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22835.0, pendingBalance=22835.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=1098.0)])
2022-02-20 14:31:21,352 INFO dLog [http-nio-8080-exec-2] RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=22835.0, pendingBalance=22835.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=1098.0)])
2022-02-20 15:26:38,321 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 15:26:38,344 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.RequestTypeService
Method: getRequestTypeByName
Arguments: [Retail]
2022-02-20 15:26:38,515 INFO dLog [main] RETURNING: RequestTypeEntity(pk_request_type_id=1, name=Retail)
2022-02-20 15:26:38,515 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.RequestStatusService
Method: getRequestStatusByName
Arguments: [Pending]
2022-02-20 15:26:38,530 INFO dLog [main] RETURNING: RequestStatusEntity(pk_request_status_id=1, name=Pending)
2022-02-20 15:26:38,584 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidRequestException
2022-02-20 15:32:38,978 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 15:32:39,021 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidRequestException
2022-02-20 15:36:28,570 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 15:36:28,605 INFO dLog [main] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 15:44:48,315 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 15:44:48,347 INFO dLog [main] RETURNING: GetResponse(gotObject=[])
2022-02-20 15:46:42,678 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 15:46:42,714 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 15:49:09,732 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAlLUserWithdrawalsOfType
Arguments: [1, Retail]
2022-02-20 15:49:09,768 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 15:51:34,038 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAlLUserWithdrawalsOfType
Arguments: [1, Retail]
2022-02-20 15:51:34,077 INFO dLog [main] RETURNING: GetResponse(gotObject=[])
2022-02-20 15:52:28,932 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: findByWithdrawId
Arguments: [1]
2022-02-20 15:52:28,968 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:02:21,730 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: deleteAllWithdraws
Arguments: [1]
2022-02-20 16:02:21,776 INFO dLog [main] RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 16:07:21,024 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: deleteAllWithdraws
Arguments: [1]
2022-02-20 16:07:21,062 INFO dLog [main] RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 16:07:44,696 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 16:07:44,739 INFO dLog [main] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:07:44,789 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAlLUserWithdrawalsOfType
Arguments: [1, Retail]
2022-02-20 16:07:44,790 INFO dLog [main] RETURNING: GetResponse(gotObject=[])
2022-02-20 16:07:44,832 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: deleteAllWithdraws
Arguments: [1]
2022-02-20 16:07:44,833 INFO dLog [main] RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 16:07:44,848 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 16:07:44,848 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:07:44,864 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: findByWithdrawId
Arguments: [1]
2022-02-20 16:07:44,865 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:10:46,697 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 16:10:46,720 INFO dLog [main] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:10:46,753 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAlLUserWithdrawalsOfType
Arguments: [1, Retail]
2022-02-20 16:10:46,754 INFO dLog [main] RETURNING: GetResponse(gotObject=[])
2022-02-20 16:10:46,785 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: deleteAllWithdraws
Arguments: [1]
2022-02-20 16:10:46,785 INFO dLog [main] RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 16:10:46,797 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 16:10:46,798 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:10:46,806 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: findByWithdrawId
Arguments: [1]
2022-02-20 16:10:46,806 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:12:37,548 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: createWithdrawal
Arguments: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 16:12:37,571 INFO dLog [main] RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:12:37,600 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAlLUserWithdrawalsOfType
Arguments: [1, Retail]
2022-02-20 16:12:37,601 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:12:37,615 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: deleteAllWithdraws
Arguments: [1]
2022-02-20 16:12:37,616 INFO dLog [main] RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 16:12:37,625 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: getAllUserWithdrawals
Arguments: [1]
2022-02-20 16:12:37,626 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 16:12:37,634 DEBUG dLog [main] Class: class com.revature.thevault.service.classes.WithdrawService
Method: findByWithdrawId
Arguments: [1]
2022-02-20 16:12:37,634 INFO dLog [main] RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:09:39,201 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 17:09:39,204 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAmountException
2022-02-20 17:09:39,222 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 17:09:39,222 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAmountException
2022-02-20 17:09:39,232 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 17:09:39,232 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAmountException
2022-02-20 17:09:39,239 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=1.24123408E8)]
2022-02-20 17:09:39,259 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidRequestException
2022-02-20 17:11:16,949 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 17:11:16,953 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: com.revature.thevault.service.exceptions.InvalidAmountException: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: 0.0"
2022-02-20 17:11:16,971 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 17:11:16,971 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: com.revature.thevault.service.exceptions.InvalidAmountException: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -1.0"
2022-02-20 17:11:16,988 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 17:11:16,988 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: com.revature.thevault.service.exceptions.InvalidAmountException: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -2123.0"
2022-02-20 17:11:16,993 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=1.24123408E8)]
2022-02-20 17:11:17,012 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: com.revature.thevault.service.exceptions.InvalidRequestException: 400 BAD_REQUEST
2022-02-20 17:12:48,669 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 17:12:48,675 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: 0.0"
2022-02-20 17:12:48,696 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 17:12:48,697 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -1.0"
2022-02-20 17:12:48,709 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 17:12:48,709 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -2123.0"
2022-02-20 17:12:48,717 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=1.24123408E8)]
2022-02-20 17:12:48,744 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION: 400 BAD_REQUEST
2022-02-20 17:13:53,599 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 17:13:53,602 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [com.revature.thevault.utility.validation.WithdrawValidation.validateAmount(WithdrawValidation.java:29), com.revature.thevault.utility.validation.WithdrawValidation.validateWithdrawRequest(WithdrawValidation.java:25), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617), org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44), org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698), com.revature.thevault.service.classes.WithdrawService$$EnhancerBySpringCGLIB$$a295f49a.createWithdrawal(<generated>), com.revature.thevault.service.classes.WithdrawServiceTest.lambda$createWithdrawInvalidAmountException$0(WithdrawServiceTest.java:143), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:55), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:37), org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:3082), com.revature.thevault.service.classes.WithdrawServiceTest.createWithdrawInvalidAmountException(WithdrawServiceTest.java:143), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725), org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60), org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131), org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92), org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115), org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105), org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106), org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64), org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45), org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35), org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226), org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272), java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35), org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57), org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88), org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86), org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86), org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53), com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71), com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33), com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235), com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)]
2022-02-20 17:13:53,624 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 17:13:53,625 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [com.revature.thevault.utility.validation.WithdrawValidation.validateAmount(WithdrawValidation.java:29), com.revature.thevault.utility.validation.WithdrawValidation.validateWithdrawRequest(WithdrawValidation.java:25), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617), org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44), org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698), com.revature.thevault.service.classes.WithdrawService$$EnhancerBySpringCGLIB$$a295f49a.createWithdrawal(<generated>), com.revature.thevault.service.classes.WithdrawServiceTest.lambda$createWithdrawInvalidAmountException$0(WithdrawServiceTest.java:143), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:55), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:37), org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:3082), com.revature.thevault.service.classes.WithdrawServiceTest.createWithdrawInvalidAmountException(WithdrawServiceTest.java:143), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725), org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60), org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131), org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92), org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115), org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105), org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106), org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64), org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45), org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35), org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226), org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272), java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35), org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57), org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88), org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86), org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86), org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53), com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71), com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33), com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235), com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)]
2022-02-20 17:13:53,634 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 17:13:53,635 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [com.revature.thevault.utility.validation.WithdrawValidation.validateAmount(WithdrawValidation.java:29), com.revature.thevault.utility.validation.WithdrawValidation.validateWithdrawRequest(WithdrawValidation.java:25), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617), org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44), org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698), com.revature.thevault.service.classes.WithdrawService$$EnhancerBySpringCGLIB$$a295f49a.createWithdrawal(<generated>), com.revature.thevault.service.classes.WithdrawServiceTest.lambda$createWithdrawInvalidAmountException$0(WithdrawServiceTest.java:143), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:55), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:37), org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:3082), com.revature.thevault.service.classes.WithdrawServiceTest.createWithdrawInvalidAmountException(WithdrawServiceTest.java:143), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725), org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60), org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131), org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92), org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115), org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105), org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106), org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64), org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45), org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35), org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226), org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272), java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35), org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57), org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88), org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86), org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86), org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53), com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71), com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33), com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235), com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)]
2022-02-20 17:13:53,644 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=1.24123408E8)]
2022-02-20 17:13:53,665 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [com.revature.thevault.service.classes.WithdrawService.createWithdrawal(WithdrawService.java:60), com.revature.thevault.service.classes.WithdrawService$$FastClassBySpringCGLIB$$61f6c24c.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698), com.revature.thevault.service.classes.WithdrawService$$EnhancerBySpringCGLIB$$a295f49a.createWithdrawal(<generated>), com.revature.thevault.service.classes.WithdrawServiceTest.lambda$createWithdrawInvalidAmountException$0(WithdrawServiceTest.java:143), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:55), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:37), org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:3082), com.revature.thevault.service.classes.WithdrawServiceTest.createWithdrawInvalidAmountException(WithdrawServiceTest.java:143), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725), org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60), org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131), org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92), org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115), org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105), org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106), org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64), org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45), org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35), org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226), org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193), java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272), java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384), java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482), java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472), java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150), java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173), java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234), java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107), org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35), org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57), org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88), org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86), org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86), org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53), com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71), com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33), com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235), com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)]
2022-02-20 17:19:38,749 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 17:19:38,753 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6d41200c
2022-02-20 17:19:38,771 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 17:19:38,771 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@31cd0efa
2022-02-20 17:19:38,779 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 17:19:38,779 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4be3de36
2022-02-20 17:19:38,791 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 17:19:38,792 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class java.lang.NullPointerException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4bc41565
2022-02-20 17:19:38,811 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 17:19:38,812 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@60d32006
2022-02-20 17:19:38,818 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 17:19:38,819 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@10820978
2022-02-20 17:19:38,825 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 17:19:38,826 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@278c67a7
2022-02-20 17:19:38,834 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 17:19:38,834 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class java.lang.NullPointerException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@c247363
2022-02-20 17:19:38,844 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 17:19:38,845 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4860627a
2022-02-20 17:19:38,852 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 17:19:38,853 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@67f0bf7e
2022-02-20 17:19:38,861 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 17:19:38,861 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@e88e14
2022-02-20 17:19:38,874 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 17:19:38,896 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:19:38,905 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 17:19:38,906 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:19:38,914 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 17:19:38,915 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 17:19:38,920 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 17:19:38,921 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:19:38,929 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 17:19:38,929 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:21:17,990 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 17:21:17,993 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@10553a61
2022-02-20 17:21:18,014 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 17:21:18,015 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@63062eea
2022-02-20 17:21:18,023 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 17:21:18,024 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4714f447
2022-02-20 17:21:18,033 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 17:21:18,034 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@165824f5
2022-02-20 17:21:18,042 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 17:21:18,043 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@424ec990
2022-02-20 17:21:18,050 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 17:21:18,051 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2c06e145
2022-02-20 17:21:18,058 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 17:21:18,059 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3b780b5c
2022-02-20 17:21:18,068 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 17:21:18,069 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@84becbe
2022-02-20 17:21:18,078 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 17:21:18,079 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@13dc383b
2022-02-20 17:21:18,085 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 17:21:18,085 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6885f3f7
2022-02-20 17:21:18,094 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 17:21:18,094 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@392ef4ff
2022-02-20 17:21:18,108 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 17:21:18,128 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:21:18,139 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 17:21:18,139 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:21:18,148 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 17:21:18,149 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 17:21:18,157 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 17:21:18,158 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:21:18,168 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 17:21:18,168 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:47:36,896 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 17:47:36,899 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@728535c6
2022-02-20 17:47:36,920 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 17:47:36,921 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@78b44fcb
2022-02-20 17:47:36,928 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 17:47:36,929 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2f3a0f37
2022-02-20 17:47:36,938 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 17:47:36,939 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5dd2ea0a
2022-02-20 17:47:36,947 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 17:47:36,947 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@571e2f15
2022-02-20 17:47:36,955 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 17:47:36,955 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2552181d
2022-02-20 17:47:36,964 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 17:47:36,965 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@51d9fd30
2022-02-20 17:47:36,971 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 17:47:36,972 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@8beb0dd
2022-02-20 17:47:36,980 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 17:47:36,981 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3d99d327
2022-02-20 17:47:36,987 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 17:47:36,987 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@233789d9
2022-02-20 17:47:36,996 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 17:47:36,997 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7f31937b
2022-02-20 17:47:37,009 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 17:47:37,034 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:47:37,044 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 17:47:37,046 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:47:37,053 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 17:47:37,054 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 17:47:37,059 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 17:47:37,061 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:47:37,070 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 17:47:37,070 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:48:40,135 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 17:48:40,140 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7e2e0b8a
2022-02-20 17:48:40,165 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 17:48:40,166 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6003eb60
2022-02-20 17:48:40,174 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 17:48:40,175 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@8beb0dd
2022-02-20 17:48:40,187 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 17:48:40,188 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2f4fc18
2022-02-20 17:48:40,199 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 17:48:40,199 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@717b0d81
2022-02-20 17:48:40,208 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 17:48:40,208 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@16745abd
2022-02-20 17:48:40,217 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 17:48:40,218 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4d793390
2022-02-20 17:48:40,228 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 17:48:40,229 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@138b9abe
2022-02-20 17:48:40,236 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 17:48:40,236 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@279e8bc0
2022-02-20 17:48:40,243 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 17:48:40,244 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@23ffc910
2022-02-20 17:48:40,251 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 17:48:40,252 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@35277c6c
2022-02-20 17:48:40,266 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 17:48:40,288 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:48:40,301 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 17:48:40,302 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:48:40,311 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 17:48:40,312 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 17:48:40,317 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 17:48:40,319 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 17:48:40,329 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 17:48:40,329 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:06:44,317 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:06:44,332 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:06:46,416 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:06:46,424 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2b89785c
2022-02-20 18:06:46,436 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:06:46,439 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@167552d6
2022-02-20 18:06:46,450 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:06:46,451 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:06:46,462 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:06:46,464 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:06:46,473 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:06:46,474 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:06:46,481 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:06:46,482 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:06:46,489 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:06:46,490 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:06:46,496 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:06:46,497 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@63a584b4
2022-02-20 18:06:46,504 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:06:46,505 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5fdb17d8
2022-02-20 18:06:46,513 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:06:46,514 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4e3c6780
2022-02-20 18:06:46,522 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:06:46,523 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@229f6254
2022-02-20 18:06:46,529 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:06:46,530 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:06:46,537 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:06:46,537 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3a56629c
2022-02-20 18:06:46,543 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:06:46,543 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@28131a78
2022-02-20 18:06:48,255 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:06:48,260 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:06:48,265 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-20 18:06:48,266 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-20 18:06:48,280 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-20 18:06:48,280 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-20 18:06:49,835 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:06:49,841 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:06:49,846 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:06:49,847 INFO dLog [main] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 18:06:51,449 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:06:51,452 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@51973757
2022-02-20 18:06:51,459 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:06:51,459 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@417dadf2
2022-02-20 18:06:51,463 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:06:51,464 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@72caa26f
2022-02-20 18:06:51,470 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:06:51,471 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@486b991f
2022-02-20 18:06:51,475 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:06:51,476 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@36fb71a2
2022-02-20 18:06:51,480 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:06:51,481 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@75170f72
2022-02-20 18:06:51,485 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:06:51,486 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@61a0d3ae
2022-02-20 18:06:51,491 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:06:51,492 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@267308ce
2022-02-20 18:06:51,496 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:06:51,496 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@41a9920d
2022-02-20 18:06:51,501 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:06:51,501 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@823a002
2022-02-20 18:06:51,506 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:06:51,506 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@743ffff1
2022-02-20 18:06:51,510 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:06:51,516 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:06:51,521 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:06:51,522 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:06:51,526 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:06:51,526 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:06:51,531 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:06:51,531 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:06:51,536 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:06:51,536 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:08:27,868 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:08:27,884 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:08:29,956 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:08:29,965 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@685ae9f8
2022-02-20 18:08:29,975 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:08:29,977 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4b2b3da0
2022-02-20 18:08:29,987 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:08:29,988 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:08:29,998 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:08:29,999 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:08:30,009 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:08:30,010 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:08:30,017 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:08:30,017 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:08:30,025 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:08:30,026 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:08:30,036 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:08:30,037 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@26989a37
2022-02-20 18:08:30,046 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:08:30,047 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@590faf6e
2022-02-20 18:08:30,055 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:08:30,056 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6d378a51
2022-02-20 18:08:30,064 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:08:30,064 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6769e62b
2022-02-20 18:08:30,071 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:08:30,071 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:08:30,078 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:08:30,079 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2b1ed385
2022-02-20 18:08:30,086 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:08:30,087 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@af19ff3
2022-02-20 18:08:31,714 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:08:31,720 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:08:31,725 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-20 18:08:31,726 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-20 18:08:31,740 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-20 18:08:31,740 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-20 18:08:33,257 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:08:33,265 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:08:33,270 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:08:33,271 INFO dLog [main] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 18:08:34,826 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:08:34,831 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@46728cd2
2022-02-20 18:08:34,840 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:08:34,841 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3e7785cf
2022-02-20 18:08:34,848 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:08:34,849 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@62d85d39
2022-02-20 18:08:34,856 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:08:34,857 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@f95e1a4
2022-02-20 18:08:34,864 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:08:34,865 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1b8185d8
2022-02-20 18:08:34,872 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:08:34,873 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@168f0550
2022-02-20 18:08:34,880 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:08:34,881 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@36b75ee4
2022-02-20 18:08:34,889 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:08:34,891 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3f38bddc
2022-02-20 18:08:34,898 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:08:34,899 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@337484a1
2022-02-20 18:08:34,905 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:08:34,906 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2e099f41
2022-02-20 18:08:34,912 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:08:34,913 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@638eef98
2022-02-20 18:08:34,919 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:08:34,926 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:08:34,932 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:08:34,934 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:08:34,939 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:08:34,940 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:08:34,953 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:08:34,956 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:08:34,972 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:08:34,974 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:08:56,380 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:08:56,401 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:09:12,489 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:09:12,511 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5703c1fb
2022-02-20 18:09:12,531 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:09:12,533 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4769537a
2022-02-20 18:09:12,544 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:09:12,545 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:09:12,557 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:09:12,558 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:09:12,565 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:09:12,566 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:09:12,574 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:09:12,575 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:09:12,585 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:09:12,586 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:09:12,597 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:09:12,598 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6f87a7c7
2022-02-20 18:09:12,608 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:09:12,609 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@418bdde9
2022-02-20 18:09:12,619 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:09:12,620 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@240df292
2022-02-20 18:09:12,628 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:09:12,629 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2c451c4a
2022-02-20 18:09:12,638 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:09:12,639 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:09:12,646 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:09:12,647 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@73ff7a54
2022-02-20 18:09:12,654 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:09:12,655 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@337c0ee4
2022-02-20 18:09:36,550 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:09:36,578 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:09:36,605 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-20 18:09:36,606 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-20 18:09:36,624 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-20 18:09:36,625 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-20 18:09:58,595 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:09:58,620 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:09:58,655 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:09:58,658 INFO dLog [main] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-20 18:10:30,221 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:10:30,225 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@665f88e1
2022-02-20 18:10:30,257 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:10:30,258 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@58945295
2022-02-20 18:10:30,268 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:10:30,269 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@627d5f99
2022-02-20 18:10:30,280 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:10:30,280 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@61648dd2
2022-02-20 18:10:30,287 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:10:30,287 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3d1b43d8
2022-02-20 18:10:30,295 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:10:30,295 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@9f52eb7
2022-02-20 18:10:30,301 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:10:30,301 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@46c2189e
2022-02-20 18:10:30,309 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:10:30,310 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5300694d
2022-02-20 18:10:30,316 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:10:30,316 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7320750c
2022-02-20 18:10:30,321 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:10:30,322 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2570851e
2022-02-20 18:10:30,331 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:10:30,331 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@67d8613
2022-02-20 18:10:30,344 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:10:30,361 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:10:30,370 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:10:30,372 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:10:30,384 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:10:30,384 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:10:30,390 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:10:30,391 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:10:30,398 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:10:30,398 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:10:55,375 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:10:55,388 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:10:57,576 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:10:57,586 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@647e98a2
2022-02-20 18:10:57,599 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:10:57,600 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@50c0c6cd
2022-02-20 18:10:57,613 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:10:57,614 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:10:57,624 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:10:57,626 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:10:57,635 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:10:57,636 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:10:57,645 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:10:57,646 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:10:57,653 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:10:57,653 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:10:57,661 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:10:57,662 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6575524a
2022-02-20 18:10:57,672 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:10:57,673 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6e3397e2
2022-02-20 18:10:57,681 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:10:57,682 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4b80194b
2022-02-20 18:10:57,689 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:10:57,690 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@88bca7d
2022-02-20 18:10:57,697 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:10:57,698 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:10:57,706 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:10:57,706 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@39903157
2022-02-20 18:10:57,712 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:10:57,713 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3b4d282a
2022-02-20 18:10:59,423 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:10:59,429 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:11:01,068 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:11:01,075 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:11:02,551 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:11:02,555 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@67b80859
2022-02-20 18:11:02,561 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:11:02,562 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6393ebde
2022-02-20 18:11:02,566 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:11:02,566 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@265fa13
2022-02-20 18:11:02,572 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:11:02,573 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@45af681f
2022-02-20 18:11:02,578 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:11:02,578 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@e34c2d4
2022-02-20 18:11:02,582 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:11:02,583 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5bc58518
2022-02-20 18:11:02,588 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:11:02,588 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6594f1ef
2022-02-20 18:11:02,593 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:11:02,593 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@34d8a412
2022-02-20 18:11:02,598 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:11:02,598 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@768120ef
2022-02-20 18:11:02,603 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:11:02,603 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5f2fb04e
2022-02-20 18:11:02,608 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:11:02,608 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@c1f74a0
2022-02-20 18:11:02,612 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:11:02,618 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:11:02,622 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:11:02,623 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:11:02,627 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:11:02,628 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:11:02,632 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:11:02,632 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:11:02,636 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:11:02,636 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:13:56,291 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:13:56,308 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:13:58,448 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:13:58,457 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@680ec419
2022-02-20 18:13:58,469 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:13:58,470 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@49dacbea
2022-02-20 18:13:58,480 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:13:58,481 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:13:58,490 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:13:58,492 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:13:58,499 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:13:58,500 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:13:58,507 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:13:58,508 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:13:58,514 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:13:58,514 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:13:58,521 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:13:58,522 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@292b0291
2022-02-20 18:13:58,529 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:13:58,530 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@72b955e5
2022-02-20 18:13:58,539 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:13:58,540 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@f9e5e81
2022-02-20 18:13:58,547 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:13:58,548 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@156608cb
2022-02-20 18:13:58,554 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:13:58,554 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:13:58,560 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:13:58,561 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@544f1784
2022-02-20 18:13:58,567 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:13:58,567 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1f5ba391
2022-02-20 18:14:00,303 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:14:00,309 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:14:01,876 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:14:01,882 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:14:03,397 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:14:03,402 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@67edbe3f
2022-02-20 18:14:03,409 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:14:03,409 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@a556611
2022-02-20 18:14:03,414 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:14:03,414 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@73a39dd
2022-02-20 18:14:03,421 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:14:03,421 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6e187d25
2022-02-20 18:14:03,427 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:14:03,427 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3fe01c91
2022-02-20 18:14:03,432 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:14:03,432 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@554967ec
2022-02-20 18:14:03,436 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:14:03,437 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7895c935
2022-02-20 18:14:03,442 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:14:03,443 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7ea91017
2022-02-20 18:14:03,447 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:14:03,448 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@28a3b296
2022-02-20 18:14:03,452 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:14:03,452 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@20e1fb9a
2022-02-20 18:14:03,457 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:14:03,458 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4b248c3f
2022-02-20 18:14:03,462 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:14:03,467 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:14:03,472 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:14:03,472 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:14:03,477 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:14:03,478 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:14:03,482 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:14:03,482 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:14:03,487 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:14:03,487 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:35:24,152 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:35:24,171 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:35:26,438 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:35:26,447 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6cb1c124
2022-02-20 18:35:26,458 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:35:26,460 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@38bcc4d6
2022-02-20 18:35:26,470 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:35:26,471 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:35:26,482 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:35:26,483 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:35:26,495 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:35:26,496 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:35:26,504 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:35:26,505 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:35:26,514 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:35:26,515 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:35:26,524 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:35:26,525 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@404a3504
2022-02-20 18:35:26,536 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:35:26,537 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@693b81cc
2022-02-20 18:35:26,548 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:35:26,549 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3a3a760f
2022-02-20 18:35:26,559 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:35:26,560 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@404c70b2
2022-02-20 18:35:26,570 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:35:26,571 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:35:26,580 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:35:26,580 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@12035f97
2022-02-20 18:35:26,588 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:35:26,589 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@21e473e8
2022-02-20 18:35:28,456 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:35:28,462 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:35:28,467 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-20 18:35:28,469 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-20 18:35:28,485 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-20 18:35:28,486 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-20 18:35:30,184 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:35:30,190 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:35:31,708 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:35:31,712 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@332265a8
2022-02-20 18:35:31,718 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:35:31,718 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@690a14da
2022-02-20 18:35:31,722 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:35:31,723 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@db86f3a
2022-02-20 18:35:31,729 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:35:31,730 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@511eaacd
2022-02-20 18:35:31,735 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:35:31,735 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1c907c54
2022-02-20 18:35:31,739 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:35:31,740 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@dadd4fb
2022-02-20 18:35:31,744 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:35:31,745 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@29414f41
2022-02-20 18:35:31,749 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:35:31,750 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2b295882
2022-02-20 18:35:31,755 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:35:31,755 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@83121e1
2022-02-20 18:35:31,759 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:35:31,760 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@30bc6684
2022-02-20 18:35:31,765 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:35:31,765 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7a8da4d1
2022-02-20 18:35:31,769 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:35:31,775 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:35:31,780 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:35:31,781 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:35:31,785 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:35:31,785 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:35:31,790 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:35:31,791 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:35:31,795 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:35:31,796 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:36:21,949 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:36:21,962 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:36:24,046 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:36:24,056 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4f6222c3
2022-02-20 18:36:24,068 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:36:24,069 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@9f87955
2022-02-20 18:36:24,079 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:36:24,079 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:36:24,086 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:36:24,088 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:36:24,096 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:36:24,097 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:36:24,106 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:36:24,106 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:36:24,113 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:36:24,113 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:36:24,120 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:36:24,120 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@bc938cf
2022-02-20 18:36:24,127 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:36:24,128 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2373f1b
2022-02-20 18:36:24,135 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:36:24,135 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@680ec419
2022-02-20 18:36:24,142 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:36:24,143 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5ec94cd9
2022-02-20 18:36:24,149 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:36:24,149 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:36:24,157 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:36:24,158 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@53167083
2022-02-20 18:36:24,164 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:36:24,164 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@49dacbea
2022-02-20 18:36:25,897 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:36:25,903 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:36:27,480 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:36:27,485 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:36:28,979 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:36:28,983 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@29cdac06
2022-02-20 18:36:28,990 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:36:28,991 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3691a710
2022-02-20 18:36:28,995 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:36:28,996 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@39735924
2022-02-20 18:36:29,002 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:36:29,002 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5b22c602
2022-02-20 18:36:29,007 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:36:29,008 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@cb8f3cc
2022-02-20 18:36:29,013 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:36:29,013 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2c71d1d9
2022-02-20 18:36:29,018 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:36:29,018 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@612e0083
2022-02-20 18:36:29,025 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:36:29,026 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7ca7c5ff
2022-02-20 18:36:29,032 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:36:29,033 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6d1ce8f0
2022-02-20 18:36:29,038 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:36:29,039 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@44dafda9
2022-02-20 18:36:29,044 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:36:29,044 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4b68f07a
2022-02-20 18:36:29,049 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:36:29,054 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:36:29,058 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:36:29,059 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:36:29,063 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:36:29,064 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:36:29,068 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:36:29,068 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:36:29,073 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:36:29,073 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:38:22,062 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:38:22,076 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:38:24,141 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:38:24,149 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@42251255
2022-02-20 18:38:24,159 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:38:24,160 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@44afd48a
2022-02-20 18:38:24,172 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:38:24,173 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:38:24,183 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:38:24,185 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:38:24,193 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:38:24,193 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:38:24,200 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:38:24,200 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:38:24,206 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:38:24,207 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:38:24,214 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:38:24,215 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1014a8b3
2022-02-20 18:38:24,223 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:38:24,224 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@229f6254
2022-02-20 18:38:24,231 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:38:24,232 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3a56629c
2022-02-20 18:38:24,239 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:38:24,239 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@28131a78
2022-02-20 18:38:24,246 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:38:24,246 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:38:24,253 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:38:24,253 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6ed0a334
2022-02-20 18:38:24,260 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:38:24,260 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@15f242c1
2022-02-20 18:38:25,916 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:38:25,921 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:38:27,481 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:38:27,487 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:38:29,063 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:38:29,066 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2bf62887
2022-02-20 18:38:29,074 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:38:29,074 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5cebbe0
2022-02-20 18:38:29,078 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:38:29,079 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7c5b9dac
2022-02-20 18:38:29,084 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:38:29,085 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@347d1586
2022-02-20 18:38:29,089 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:38:29,090 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@cb35f11
2022-02-20 18:38:29,094 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:38:29,094 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@42744b51
2022-02-20 18:38:29,098 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:38:29,099 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1ef9a7bc
2022-02-20 18:38:29,104 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:38:29,104 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@249c9110
2022-02-20 18:38:29,109 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:38:29,109 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@770b0678
2022-02-20 18:38:29,113 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:38:29,114 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5a3d198c
2022-02-20 18:38:29,119 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:38:29,119 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@d984477
2022-02-20 18:38:29,123 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:38:29,129 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:38:29,133 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:38:29,134 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:38:29,139 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:38:29,139 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:38:29,143 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:38:29,144 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:38:29,148 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:38:29,149 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:41:24,946 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:41:24,961 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:41:26,992 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:41:27,003 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@229a5151
2022-02-20 18:41:27,017 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:41:27,018 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@292efb1a
2022-02-20 18:41:27,030 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:41:27,031 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:41:27,042 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:41:27,044 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:41:27,056 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:41:27,057 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:41:27,064 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:41:27,065 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:41:27,074 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:41:27,075 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:41:27,084 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:41:27,085 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@88bca7d
2022-02-20 18:41:27,096 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:41:27,097 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6dc3cfcd
2022-02-20 18:41:27,108 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:41:27,109 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@40074290
2022-02-20 18:41:27,121 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:41:27,122 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@b6bcc20
2022-02-20 18:41:27,131 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:41:27,132 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:41:27,143 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:41:27,143 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@23dc737b
2022-02-20 18:41:27,153 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:41:27,154 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@20baf9a7
2022-02-20 18:41:28,996 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:41:29,003 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:41:30,564 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:41:30,571 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:41:32,041 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:41:32,045 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@26c92b0f
2022-02-20 18:41:32,053 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:41:32,053 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@682acaa
2022-02-20 18:41:32,058 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:41:32,058 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2a5d8e56
2022-02-20 18:41:32,065 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:41:32,065 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5dadb141
2022-02-20 18:41:32,070 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:41:32,070 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1bc4fa9e
2022-02-20 18:41:32,075 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:41:32,075 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@25240c9c
2022-02-20 18:41:32,079 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:41:32,080 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@153396c0
2022-02-20 18:41:32,085 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:41:32,085 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@37fffa9e
2022-02-20 18:41:32,090 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:41:32,090 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3ef3ef37
2022-02-20 18:41:32,094 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:41:32,095 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@28682a5
2022-02-20 18:41:32,100 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:41:32,100 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@625925d4
2022-02-20 18:41:32,104 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:41:32,109 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:41:32,114 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:41:32,115 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:41:32,119 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:41:32,119 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:41:32,123 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:41:32,123 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:41:32,127 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:41:32,128 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:43:11,549 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:43:11,565 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:43:13,735 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:43:13,743 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@78110383
2022-02-20 18:43:13,754 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:43:13,755 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6ec96f4b
2022-02-20 18:43:13,765 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:43:13,766 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:43:13,775 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:43:13,776 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:43:13,783 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:43:13,784 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:43:13,791 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:43:13,791 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:43:13,797 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:43:13,798 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:43:13,807 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:43:13,808 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@590faf6e
2022-02-20 18:43:13,817 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:43:13,818 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@43b945ed
2022-02-20 18:43:13,827 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:43:13,828 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7a2aab93
2022-02-20 18:43:13,836 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:43:13,836 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@22017d26
2022-02-20 18:43:13,844 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:43:13,844 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:43:13,851 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:43:13,851 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2528cb0d
2022-02-20 18:43:13,859 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:43:13,860 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@51361ca3
2022-02-20 18:43:15,550 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:43:15,556 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:43:17,142 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:43:17,147 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:43:18,720 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:43:18,723 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@739157a5
2022-02-20 18:43:18,730 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:43:18,730 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4b09295a
2022-02-20 18:43:18,734 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:43:18,735 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1e5f869b
2022-02-20 18:43:18,740 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:43:18,741 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3f0fa283
2022-02-20 18:43:18,746 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:43:18,746 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1c37d7af
2022-02-20 18:43:18,751 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:43:18,751 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@753f19e3
2022-02-20 18:43:18,755 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:43:18,756 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3766b67d
2022-02-20 18:43:18,761 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:43:18,761 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3fd350c9
2022-02-20 18:43:18,766 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:43:18,766 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3d04cc10
2022-02-20 18:43:18,771 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:43:18,771 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1925aebe
2022-02-20 18:43:18,776 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:43:18,776 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5ef77fb3
2022-02-20 18:43:18,780 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:43:18,785 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:43:18,790 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:43:18,790 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:43:18,795 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:43:18,796 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:43:18,800 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:43:18,800 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:43:18,804 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:43:18,805 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:45:39,094 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:45:39,110 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:45:41,361 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:45:41,373 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@33da85f8
2022-02-20 18:45:41,386 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:45:41,388 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1ce49963
2022-02-20 18:45:41,401 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:45:41,402 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:45:41,413 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:45:41,414 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:45:41,426 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:45:41,427 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:45:41,435 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:45:41,436 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:45:41,444 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:45:41,445 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:45:41,454 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:45:41,455 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@101b46b7
2022-02-20 18:45:41,464 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:45:41,465 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@47dbe813
2022-02-20 18:45:41,475 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:45:41,476 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6b6840fd
2022-02-20 18:45:41,484 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:45:41,485 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@152dba6c
2022-02-20 18:45:41,494 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:45:41,495 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:45:41,502 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:45:41,503 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@48a56139
2022-02-20 18:45:41,510 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:45:41,511 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4ff761cf
2022-02-20 18:45:43,831 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:45:43,840 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:45:46,153 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:45:46,163 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:46:04,115 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:46:04,136 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:46:06,358 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:46:06,368 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2a26fa3a
2022-02-20 18:46:06,378 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:46:06,380 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@22ea5f7b
2022-02-20 18:46:06,390 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:46:06,390 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:46:06,400 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:46:06,402 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:46:06,410 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:46:06,412 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:46:06,419 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:46:06,420 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:46:06,427 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:46:06,428 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:46:06,436 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:46:06,437 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@17c6c21f
2022-02-20 18:46:06,444 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:46:06,445 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6b5ad1f
2022-02-20 18:46:06,453 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:46:06,454 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2d7a8c8d
2022-02-20 18:46:06,462 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:46:06,463 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@22910251
2022-02-20 18:46:06,470 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:46:06,471 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:46:06,479 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:46:06,480 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6e0e925a
2022-02-20 18:46:06,486 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:46:06,487 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@71ac10b4
2022-02-20 18:46:08,283 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:46:08,289 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:46:09,898 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:46:09,905 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:46:11,496 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:46:11,501 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4adf7180
2022-02-20 18:46:11,508 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:46:11,508 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@fc17f6c
2022-02-20 18:46:11,513 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:46:11,513 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@583ef0b5
2022-02-20 18:46:11,520 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:46:11,520 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@27ad3727
2022-02-20 18:46:11,525 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:46:11,526 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@58758aeb
2022-02-20 18:46:11,530 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:46:11,530 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1ea4bb05
2022-02-20 18:46:11,535 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:46:11,536 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@507ea3f9
2022-02-20 18:46:11,541 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:46:11,542 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@304d551e
2022-02-20 18:46:11,547 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:46:11,547 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@15095985
2022-02-20 18:46:11,553 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:46:11,553 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@8e9ba83
2022-02-20 18:46:11,558 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:46:11,559 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@56628d84
2022-02-20 18:46:11,562 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:46:11,569 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:46:11,574 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:46:11,574 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:46:11,578 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:46:11,579 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:46:11,584 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:46:11,584 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:46:11,588 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:46:11,589 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:51:49,271 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:51:49,286 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:51:51,351 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:51:51,361 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2528cb0d
2022-02-20 18:51:51,371 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:51:51,372 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@109b4eff
2022-02-20 18:51:51,381 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:51:51,382 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:51:51,391 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:51:51,393 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:51:51,401 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:51:51,403 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:51:51,409 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:51:51,409 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:51:51,416 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:51:51,417 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:51:51,423 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:51:51,424 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@74655f00
2022-02-20 18:51:51,432 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:51:51,432 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@38bcc4d6
2022-02-20 18:51:51,439 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:51:51,440 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@8ec3058
2022-02-20 18:51:51,446 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:51:51,447 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@16fb67e2
2022-02-20 18:51:51,453 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:51:51,453 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:51:51,461 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:51:51,462 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@611178e8
2022-02-20 18:51:51,468 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:51:51,469 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1811d803
2022-02-20 18:51:53,109 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:51:53,115 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:51:54,618 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:51:54,625 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:51:56,126 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:51:56,130 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4d320cf0
2022-02-20 18:51:56,136 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:51:56,136 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@ae2a782
2022-02-20 18:51:56,141 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:51:56,141 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@493a9f44
2022-02-20 18:51:56,148 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:51:56,148 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@636d656b
2022-02-20 18:51:56,153 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:51:56,153 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@d744987
2022-02-20 18:51:56,158 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:51:56,158 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7390774a
2022-02-20 18:51:56,162 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:51:56,163 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7bde126e
2022-02-20 18:51:56,167 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:51:56,168 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2e050605
2022-02-20 18:51:56,173 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:51:56,173 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@25432cc9
2022-02-20 18:51:56,177 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:51:56,178 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@16836c3a
2022-02-20 18:51:56,182 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:51:56,183 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@307f3c51
2022-02-20 18:51:56,187 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:51:56,193 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:51:56,197 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:51:56,198 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:51:56,202 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:51:56,202 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:51:56,206 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:51:56,207 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:51:56,212 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:51:56,212 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:53:15,655 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:53:15,670 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:53:17,733 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:53:17,742 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@64311278
2022-02-20 18:53:17,752 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:53:17,753 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5826b990
2022-02-20 18:53:17,762 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:53:17,762 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:53:17,771 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:53:17,772 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:53:17,780 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:53:17,782 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:53:17,790 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:53:17,790 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:53:17,797 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:53:17,797 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:53:17,804 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:53:17,804 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5b8dc460
2022-02-20 18:53:17,811 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:53:17,811 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2c81962b
2022-02-20 18:53:17,818 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:53:17,819 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@775f211a
2022-02-20 18:53:17,825 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:53:17,825 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1a67eccd
2022-02-20 18:53:17,831 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:53:17,832 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:53:17,839 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:53:17,839 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5a2290eb
2022-02-20 18:53:17,845 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:53:17,845 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7d58fc2a
2022-02-20 18:53:19,498 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:53:19,505 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:53:21,033 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:53:21,039 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:53:22,543 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:53:22,547 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@d744987
2022-02-20 18:53:22,553 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:53:22,554 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@73a39dd
2022-02-20 18:53:22,558 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:53:22,558 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4e6e00df
2022-02-20 18:53:22,564 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:53:22,565 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@504ef0c1
2022-02-20 18:53:22,569 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:53:22,570 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@554967ec
2022-02-20 18:53:22,574 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:53:22,574 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7895c935
2022-02-20 18:53:22,579 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:53:22,579 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5ffaf61e
2022-02-20 18:53:22,584 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:53:22,585 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@28a3b296
2022-02-20 18:53:22,590 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:53:22,590 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@20e1fb9a
2022-02-20 18:53:22,594 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:53:22,595 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4b248c3f
2022-02-20 18:53:22,599 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:53:22,600 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7dbb14e4
2022-02-20 18:53:22,604 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:53:22,609 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:53:22,614 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:53:22,615 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:53:22,619 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:53:22,619 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:53:22,623 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:53:22,624 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:53:22,628 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:53:22,629 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:55:19,573 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:55:19,590 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:55:21,796 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:55:21,804 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@48a56139
2022-02-20 18:55:21,815 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:55:21,817 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@19a811ac
2022-02-20 18:55:21,828 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:55:21,828 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:55:21,837 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:55:21,839 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:55:21,846 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:55:21,848 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:55:21,855 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:55:21,856 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:55:21,862 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:55:21,862 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:55:21,871 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:55:21,872 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@64c6af9a
2022-02-20 18:55:21,881 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:55:21,882 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@34bf4424
2022-02-20 18:55:21,890 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:55:21,891 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6bf3e45e
2022-02-20 18:55:21,900 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:55:21,901 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@50bc81dc
2022-02-20 18:55:21,908 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:55:21,908 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:55:21,916 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:55:21,916 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@65b685d2
2022-02-20 18:55:21,924 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:55:21,924 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2c630774
2022-02-20 18:55:23,631 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:55:23,638 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:55:25,281 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:55:25,288 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:55:26,971 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:55:26,976 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@63824e83
2022-02-20 18:55:26,984 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:55:26,985 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@46e021d2
2022-02-20 18:55:26,990 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:55:26,990 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4fb88bb6
2022-02-20 18:55:26,998 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:55:26,999 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2375cc56
2022-02-20 18:55:27,005 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:55:27,005 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@60c1eec8
2022-02-20 18:55:27,011 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:55:27,012 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@109490df
2022-02-20 18:55:27,017 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:55:27,017 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1d8ee9e7
2022-02-20 18:55:27,023 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:55:27,024 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@792bd8c8
2022-02-20 18:55:27,032 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:55:27,032 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1300c7db
2022-02-20 18:55:27,037 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:55:27,038 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1ced11ff
2022-02-20 18:55:27,043 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:55:27,044 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3c9e1ae7
2022-02-20 18:55:27,048 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:55:27,055 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:55:27,060 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:55:27,061 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:55:27,066 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:55:27,066 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:55:27,071 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:55:27,072 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:55:27,077 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:55:27,077 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:56:55,175 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:56:55,191 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:56:57,658 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:56:57,668 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@24d77b56
2022-02-20 18:56:57,679 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:56:57,680 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6505b0e6
2022-02-20 18:56:57,691 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:56:57,692 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:56:57,699 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:56:57,701 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:56:57,710 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:56:57,711 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:56:57,719 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:56:57,719 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:56:57,727 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:56:57,728 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:56:57,736 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:56:57,736 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6aacd3e
2022-02-20 18:56:57,743 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:56:57,744 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@481e6de0
2022-02-20 18:56:57,753 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:56:57,753 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@87babc2
2022-02-20 18:56:57,760 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:56:57,761 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@652fe8da
2022-02-20 18:56:57,768 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:56:57,768 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:56:57,776 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:56:57,776 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@44f1b85c
2022-02-20 18:56:57,782 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:56:57,783 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2f6a59bf
2022-02-20 18:56:59,578 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:56:59,586 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:57:01,191 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:57:01,198 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:57:02,820 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:57:02,825 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@54d3cbca
2022-02-20 18:57:02,832 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:57:02,833 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@64832b53
2022-02-20 18:57:02,838 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:57:02,839 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@29887163
2022-02-20 18:57:02,845 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:57:02,846 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@54db735
2022-02-20 18:57:02,851 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:57:02,852 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6f0cf4f
2022-02-20 18:57:02,858 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:57:02,858 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4f9bf5c2
2022-02-20 18:57:02,862 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:57:02,863 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2707071b
2022-02-20 18:57:02,868 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:57:02,869 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1cdc3ab
2022-02-20 18:57:02,876 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:57:02,876 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1e6d3356
2022-02-20 18:57:02,881 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:57:02,882 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1e7cb778
2022-02-20 18:57:02,888 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:57:02,889 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4f48d88f
2022-02-20 18:57:02,895 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:57:02,900 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:57:02,906 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:57:02,907 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:57:02,911 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:57:02,912 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:57:02,916 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:57:02,916 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:57:02,921 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:57:02,921 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:58:05,399 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 18:58:05,421 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 18:58:07,641 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 18:58:07,650 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1d005ad1
2022-02-20 18:58:07,662 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 18:58:07,663 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5b76af0a
2022-02-20 18:58:07,674 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 18:58:07,675 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:58:07,683 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 18:58:07,685 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 18:58:07,696 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 18:58:07,698 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 18:58:07,706 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 18:58:07,706 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:58:07,713 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 18:58:07,713 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:58:07,721 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 18:58:07,722 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7870cab0
2022-02-20 18:58:07,732 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 18:58:07,733 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@46ddd024
2022-02-20 18:58:07,741 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 18:58:07,742 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2373f1b
2022-02-20 18:58:07,749 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 18:58:07,750 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@680ec419
2022-02-20 18:58:07,758 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 18:58:07,759 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 18:58:07,767 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 18:58:07,768 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5ec94cd9
2022-02-20 18:58:07,775 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 18:58:07,776 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@53167083
2022-02-20 18:58:09,591 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 18:58:09,599 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 18:58:11,277 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 18:58:11,283 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 18:58:12,884 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 18:58:12,888 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@261af9cf
2022-02-20 18:58:12,895 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 18:58:12,895 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4c93ba3e
2022-02-20 18:58:12,899 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 18:58:12,900 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@658ed88c
2022-02-20 18:58:12,905 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 18:58:12,906 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@306eb256
2022-02-20 18:58:12,912 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 18:58:12,912 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5367c180
2022-02-20 18:58:12,916 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 18:58:12,917 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4ae9b88c
2022-02-20 18:58:12,921 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 18:58:12,921 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@f505f85
2022-02-20 18:58:12,926 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 18:58:12,927 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@765c094a
2022-02-20 18:58:12,932 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 18:58:12,932 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7bfddc73
2022-02-20 18:58:12,937 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 18:58:12,937 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@65cc5f50
2022-02-20 18:58:12,941 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 18:58:12,942 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@236d562b
2022-02-20 18:58:12,947 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 18:58:12,952 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:58:12,957 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 18:58:12,958 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:58:12,963 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 18:58:12,963 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 18:58:12,968 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 18:58:12,968 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 18:58:12,973 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 18:58:12,973 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 19:02:10,152 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-20 19:02:10,166 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-20 19:02:12,693 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-20 19:02:12,703 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@473b3050
2022-02-20 19:02:12,715 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-20 19:02:12,717 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7c1d990f
2022-02-20 19:02:12,729 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-20 19:02:12,730 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 19:02:12,742 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-20 19:02:12,743 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-20 19:02:12,754 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-20 19:02:12,756 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-20 19:02:12,765 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-20 19:02:12,766 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 19:02:12,773 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-20 19:02:12,774 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 19:02:12,782 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-20 19:02:12,783 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@590faf6e
2022-02-20 19:02:12,791 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-20 19:02:12,791 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@43b945ed
2022-02-20 19:02:12,797 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-20 19:02:12,798 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7a2aab93
2022-02-20 19:02:12,803 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-20 19:02:12,804 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@22017d26
2022-02-20 19:02:12,809 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-20 19:02:12,810 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-20 19:02:12,816 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-20 19:02:12,817 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2528cb0d
2022-02-20 19:02:12,823 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-20 19:02:12,823 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@51361ca3
2022-02-20 19:02:14,574 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-20 19:02:14,582 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-20, amount=100.0)])
2022-02-20 19:02:16,133 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-20 19:02:16,139 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-20 19:02:17,713 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-20 19:02:17,717 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4279fdfe
2022-02-20 19:02:17,725 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-20 19:02:17,725 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@830b901
2022-02-20 19:02:17,730 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-20 19:02:17,730 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1bc4a351
2022-02-20 19:02:17,737 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-20 19:02:17,737 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@25240c9c
2022-02-20 19:02:17,742 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-20 19:02:17,743 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@e964bff
2022-02-20 19:02:17,747 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-20 19:02:17,748 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@32ba50b9
2022-02-20 19:02:17,752 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-20 19:02:17,753 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@37fffa9e
2022-02-20 19:02:17,758 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-20 19:02:17,759 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@625925d4
2022-02-20 19:02:17,764 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-20 19:02:17,764 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2aba180b
2022-02-20 19:02:17,769 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-20 19:02:17,769 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@b11c03c
2022-02-20 19:02:17,775 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-20 19:02:17,775 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3db4f851
2022-02-20 19:02:17,779 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-20 19:02:17,786 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 19:02:17,791 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-20 19:02:17,792 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 19:02:17,797 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-20 19:02:17,797 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-20 19:02:17,802 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-20 19:02:17,803 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-20 19:02:17,808 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-20 19:02:17,808 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-20, amount=12.22)])
2022-02-21 12:53:39,543 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 12:53:39,551 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 12:53:39,601 INFO dLog [http-nio-8080-exec-2] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 12:53:39,601 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 12:53:39,638 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 12:53:39,642 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 12:53:39,673 INFO dLog [http-nio-8080-exec-3] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 12:53:39,673 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 12:53:39,687 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 12:53:39,692 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 12:53:39,700 INFO dLog [http-nio-8080-exec-4] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[])
2022-02-21 12:53:39,701 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[])
2022-02-21 12:53:39,726 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 12:53:39,727 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 12:53:39,728 INFO dLog [http-nio-8080-exec-5] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[])
2022-02-21 12:53:39,728 INFO dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[])
2022-02-21 12:53:44,510 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 12:53:44,511 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 12:53:44,511 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 12:53:44,515 INFO dLog [http-nio-8080-exec-7] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 12:53:44,544 INFO dLog [http-nio-8080-exec-7] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 12:53:44,544 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 12:53:47,704 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 12:53:47,704 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 12:53:47,704 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 12:53:47,705 INFO dLog [http-nio-8080-exec-8] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 12:53:47,707 INFO dLog [http-nio-8080-exec-8] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 12:53:47,707 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 12:53:55,255 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 12:53:55,255 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 12:53:55,256 INFO dLog [http-nio-8080-exec-9] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 12:53:55,256 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 12:53:55,262 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 12:53:55,262 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 12:53:55,263 INFO dLog [http-nio-8080-exec-10] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 12:53:55,263 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 12:53:55,268 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 12:53:55,268 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 12:53:55,271 INFO dLog [http-nio-8080-exec-1] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 12:53:55,271 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 12:53:55,286 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 12:53:55,287 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 12:53:55,289 INFO dLog [http-nio-8080-exec-2] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 12:53:55,289 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 12:54:00,404 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-21 12:54:00,406 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 12:54:00,408 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-21 12:54:00,413 INFO dLog [http-nio-8080-exec-3] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 12:54:00,414 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 12:54:00,418 INFO dLog [http-nio-8080-exec-3] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 12:54:00,420 INFO dLog [http-nio-8080-exec-3] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 12:54:00,420 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 12:54:17,019 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=1, reference=asdfa, amount=23.0)]
2022-02-21 12:54:17,023 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cheque, accountId=1, reference=asdfa, amount=23.0)]
2022-02-21 12:54:17,023 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Cheque]
2022-02-21 12:54:17,028 INFO dLog [http-nio-8080-exec-5] METHOD: findDepositTypeEntityByName
RETURNING: DepositTypeEntity(pk_deposit_type_id=2, name=Cheque)
2022-02-21 12:54:17,042 INFO dLog [http-nio-8080-exec-5] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfa, dateDeposit=2022-02-21, amount=23.0)])
2022-02-21 12:54:17,043 INFO dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfa, dateDeposit=2022-02-21, amount=23.0)])
2022-02-21 12:54:17,052 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=23, pendingBalance=23)]
2022-02-21 12:54:17,053 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=23, pendingBalance=23)]
2022-02-21 12:54:17,057 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 12:54:17,058 INFO dLog [http-nio-8080-exec-7] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 12:54:17,065 INFO dLog [http-nio-8080-exec-7] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=23.0, pendingBalance=23.0)])
2022-02-21 12:54:17,066 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=23.0, pendingBalance=23.0)])
2022-02-21 12:54:17,072 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-21 12:54:17,072 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 12:54:17,072 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-21 12:54:17,075 INFO dLog [http-nio-8080-exec-8] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cheque, reference=asdfa, dateDeposit=2022-02-21, amount=23.0)])
2022-02-21 12:54:17,075 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 12:54:17,076 INFO dLog [http-nio-8080-exec-8] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 12:54:17,077 INFO dLog [http-nio-8080-exec-8] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cheque, transactionReference=asdfa, date=2022-02-21, amount=23.0)])
2022-02-21 12:54:17,077 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cheque, transactionReference=asdfa, date=2022-02-21, amount=23.0)])
2022-02-21 13:24:01,304 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:24:01,312 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:24:01,364 INFO dLog [http-nio-8080-exec-2] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:24:01,364 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:24:01,407 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:24:01,410 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:24:01,444 INFO dLog [http-nio-8080-exec-3] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:24:01,444 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:24:01,459 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:24:01,464 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:24:01,473 INFO dLog [http-nio-8080-exec-4] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:24:01,473 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:24:01,489 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:24:01,490 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:24:01,491 INFO dLog [http-nio-8080-exec-5] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:24:01,491 INFO dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:24:15,456 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:24:15,456 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:24:15,457 INFO dLog [http-nio-8080-exec-7] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:24:15,457 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:26:51,490 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:26:51,490 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:26:51,491 INFO dLog [http-nio-8080-exec-1] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:26:51,491 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:26:51,499 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:26:51,499 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:26:51,500 INFO dLog [http-nio-8080-exec-2] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:26:51,500 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:26:51,508 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:26:51,508 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:26:51,509 INFO dLog [http-nio-8080-exec-3] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:26:51,509 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:26:51,523 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:26:51,523 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:26:51,524 INFO dLog [http-nio-8080-exec-4] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:26:51,524 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:26:54,377 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:26:54,377 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:26:54,377 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 13:26:54,382 INFO dLog [http-nio-8080-exec-7] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 13:26:54,411 INFO dLog [http-nio-8080-exec-7] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:26:54,411 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:12,788 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:35:12,788 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:35:12,789 INFO dLog [http-nio-8080-exec-7] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:35:12,789 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:35:12,796 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:35:12,796 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:35:12,797 INFO dLog [http-nio-8080-exec-6] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:35:12,798 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:35:12,804 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:35:12,804 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:35:12,806 INFO dLog [http-nio-8080-exec-8] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:12,806 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:12,826 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:35:12,826 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:35:12,827 INFO dLog [http-nio-8080-exec-9] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:12,828 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:16,258 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-21 13:35:16,258 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-21 13:35:16,258 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Savings]
2022-02-21 13:35:16,259 INFO dLog [http-nio-8080-exec-10] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=2, name=Savings)
2022-02-21 13:35:16,261 INFO dLog [http-nio-8080-exec-10] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:16,261 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:22,281 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:35:22,281 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:35:22,282 INFO dLog [http-nio-8080-exec-1] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:35:22,282 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:35:22,288 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:35:22,288 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:35:22,289 INFO dLog [http-nio-8080-exec-2] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:35:22,290 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:35:22,295 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:35:22,296 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:35:22,298 INFO dLog [http-nio-8080-exec-3] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:22,298 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:22,310 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:35:22,310 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:35:22,311 INFO dLog [http-nio-8080-exec-4] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:22,312 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:33,601 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:35:33,601 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:35:33,602 INFO dLog [http-nio-8080-exec-6] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:35:33,602 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:35:33,608 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:35:33,608 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:35:33,609 INFO dLog [http-nio-8080-exec-8] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:35:33,609 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:35:33,615 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:35:33,615 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:35:33,617 INFO dLog [http-nio-8080-exec-9] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:33,617 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:33,629 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:35:33,629 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:35:33,631 INFO dLog [http-nio-8080-exec-10] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:33,631 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:35,657 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-21 13:35:35,657 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Savings)]
2022-02-21 13:35:35,657 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Savings]
2022-02-21 13:35:35,658 INFO dLog [http-nio-8080-exec-1] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=2, name=Savings)
2022-02-21 13:35:35,660 INFO dLog [http-nio-8080-exec-1] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:35:35,660 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:11,849 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:36:11,849 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:36:11,850 INFO dLog [http-nio-8080-exec-4] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:36:11,850 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:36:11,855 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:36:11,856 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:36:11,857 INFO dLog [http-nio-8080-exec-5] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:36:11,857 INFO dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:36:11,863 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:36:11,863 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:36:11,865 INFO dLog [http-nio-8080-exec-7] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:11,865 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:11,878 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:36:11,878 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:36:11,880 INFO dLog [http-nio-8080-exec-6] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:11,880 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:13,705 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:36:13,705 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:36:13,705 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 13:36:13,705 INFO dLog [http-nio-8080-exec-8] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 13:36:13,706 INFO dLog [http-nio-8080-exec-8] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:13,706 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:19,600 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:36:19,601 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:36:19,601 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 13:36:19,602 INFO dLog [http-nio-8080-exec-9] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 13:36:19,604 INFO dLog [http-nio-8080-exec-9] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:19,604 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:23,729 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:36:23,729 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:36:23,730 INFO dLog [http-nio-8080-exec-10] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:36:23,730 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:36:23,736 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:36:23,737 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:36:23,737 INFO dLog [http-nio-8080-exec-1] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:36:23,737 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:36:23,743 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:36:23,743 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:36:23,745 INFO dLog [http-nio-8080-exec-2] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:23,745 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:23,758 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:36:23,758 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:36:23,760 INFO dLog [http-nio-8080-exec-3] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:23,760 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:37,705 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:36:37,705 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:36:37,706 INFO dLog [http-nio-8080-exec-7] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:36:37,706 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:36:37,712 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:36:37,712 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:36:37,713 INFO dLog [http-nio-8080-exec-6] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:36:37,714 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:36:37,720 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:36:37,720 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:36:37,722 INFO dLog [http-nio-8080-exec-8] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:37,723 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:37,738 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:36:37,738 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:36:37,740 INFO dLog [http-nio-8080-exec-9] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:37,741 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:48,107 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:36:48,107 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:36:48,107 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 13:36:48,108 INFO dLog [http-nio-8080-exec-10] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 13:36:48,109 INFO dLog [http-nio-8080-exec-10] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=6, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:36:48,109 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=6, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:15,556 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:38:15,556 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:38:15,556 INFO dLog [http-nio-8080-exec-2] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:38:15,556 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:38:15,562 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:38:15,562 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:38:15,563 INFO dLog [http-nio-8080-exec-3] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:38:15,563 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:38:15,569 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:38:15,569 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:38:15,571 INFO dLog [http-nio-8080-exec-4] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=6, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:15,571 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=6, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:17,882 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:38:17,882 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:38:17,882 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 13:38:17,883 INFO dLog [http-nio-8080-exec-5] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 13:38:17,884 INFO dLog [http-nio-8080-exec-5] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=7, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:17,884 INFO dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=7, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:21,808 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:38:21,808 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:38:21,808 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 13:38:21,808 INFO dLog [http-nio-8080-exec-7] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 13:38:21,810 INFO dLog [http-nio-8080-exec-7] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=8, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:21,810 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=8, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:24,288 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
Arguments: [5]
2022-02-21 13:38:24,291 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: deleteAllDeposits
ARGUMENTS: [5]
2022-02-21 13:38:24,298 INFO dLog [http-nio-8080-exec-8] METHOD: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:24,298 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:24,308 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
Arguments: [5]
2022-02-21 13:38:24,311 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [5]
2022-02-21 13:38:24,318 INFO dLog [http-nio-8080-exec-10] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:24,318 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:24,326 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
Arguments: [5]
2022-02-21 13:38:24,326 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [5]
2022-02-21 13:38:24,335 INFO dLog [http-nio-8080-exec-2] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:24,336 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=5, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:26,657 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
Arguments: [5]
2022-02-21 13:38:26,657 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: deleteAllDeposits
ARGUMENTS: [5]
2022-02-21 13:38:26,658 INFO dLog [http-nio-8080-exec-3] METHOD: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:26,658 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:26,663 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
Arguments: [5]
2022-02-21 13:38:26,663 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [5]
2022-02-21 13:38:26,664 INFO dLog [http-nio-8080-exec-4] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:26,664 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:26,670 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
Arguments: [5]
2022-02-21 13:38:26,670 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [5]
2022-02-21 13:38:26,671 ERROR dLog [http-nio-8080-exec-5] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@15c25288
2022-02-21 13:38:26,672 ERROR dLog [http-nio-8080-exec-5] CONTROLLER CLASS: class com.revature.thevault.presentation.controller.AccountController
METHOD: deleteAccount
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAccountIdException
2022-02-21 13:38:28,256 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
Arguments: [5]
2022-02-21 13:38:28,256 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: deleteAllDeposits
ARGUMENTS: [5]
2022-02-21 13:38:28,257 INFO dLog [http-nio-8080-exec-7] METHOD: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:28,257 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:28,263 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
Arguments: [5]
2022-02-21 13:38:28,263 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [5]
2022-02-21 13:38:28,264 INFO dLog [http-nio-8080-exec-6] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:28,264 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:28,269 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
Arguments: [5]
2022-02-21 13:38:28,270 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [5]
2022-02-21 13:38:28,270 ERROR dLog [http-nio-8080-exec-8] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@46826cad
2022-02-21 13:38:28,271 ERROR dLog [http-nio-8080-exec-8] CONTROLLER CLASS: class com.revature.thevault.presentation.controller.AccountController
METHOD: deleteAccount
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAccountIdException
2022-02-21 13:38:30,738 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
Arguments: [6]
2022-02-21 13:38:30,738 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: deleteAllDeposits
ARGUMENTS: [6]
2022-02-21 13:38:30,739 INFO dLog [http-nio-8080-exec-10] METHOD: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:30,739 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:30,746 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
Arguments: [6]
2022-02-21 13:38:30,746 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [6]
2022-02-21 13:38:30,747 INFO dLog [http-nio-8080-exec-2] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:30,747 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:38:30,754 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
Arguments: [6]
2022-02-21 13:38:30,755 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [6]
2022-02-21 13:38:30,757 INFO dLog [http-nio-8080-exec-4] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=6, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:38:30,757 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=6, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:27,171 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:39:27,171 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:39:27,172 INFO dLog [http-nio-8080-exec-6] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:39:27,172 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:39:27,178 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:39:27,178 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:39:27,179 INFO dLog [http-nio-8080-exec-8] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:39:27,179 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:39:27,185 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:39:27,185 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:39:27,189 INFO dLog [http-nio-8080-exec-9] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=7, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=8, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:27,189 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=7, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=8, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:29,490 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:39:29,491 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 13:39:29,491 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 13:39:29,491 INFO dLog [http-nio-8080-exec-10] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 13:39:29,493 INFO dLog [http-nio-8080-exec-10] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:29,493 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:30,944 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
Arguments: [7]
2022-02-21 13:39:30,944 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: deleteAllDeposits
ARGUMENTS: [7]
2022-02-21 13:39:30,946 INFO dLog [http-nio-8080-exec-2] METHOD: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:39:30,946 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:39:30,953 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
Arguments: [7]
2022-02-21 13:39:30,953 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [7]
2022-02-21 13:39:30,954 INFO dLog [http-nio-8080-exec-4] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:39:30,954 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:39:30,963 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
Arguments: [7]
2022-02-21 13:39:30,964 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [7]
2022-02-21 13:39:30,966 INFO dLog [http-nio-8080-exec-7] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=7, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:30,966 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=7, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:32,074 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:39:32,074 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:39:32,078 INFO dLog [http-nio-8080-exec-6] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=8, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:32,078 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=8, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:33,842 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
Arguments: [8]
2022-02-21 13:39:33,842 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: deleteAllDeposits
ARGUMENTS: [8]
2022-02-21 13:39:33,843 INFO dLog [http-nio-8080-exec-9] METHOD: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:39:33,843 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.DepositController
Method: deleteAllDeposits
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:39:33,850 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
Arguments: [8]
2022-02-21 13:39:33,850 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [8]
2022-02-21 13:39:33,851 INFO dLog [http-nio-8080-exec-1] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:39:33,851 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.WithdrawController
Method: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 13:39:33,858 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
Arguments: [8]
2022-02-21 13:39:33,858 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [8]
2022-02-21 13:39:33,860 INFO dLog [http-nio-8080-exec-3] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=8, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:33,860 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=8, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:35,008 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:39:35,009 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:39:35,012 INFO dLog [http-nio-8080-exec-4] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:35,012 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:39:37,779 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-21 13:39:37,781 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 13:39:37,783 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-21 13:39:37,784 INFO dLog [http-nio-8080-exec-5] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:39:37,784 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 13:39:37,786 INFO dLog [http-nio-8080-exec-5] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:39:37,786 INFO dLog [http-nio-8080-exec-5] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:39:37,787 INFO dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:41:35,610 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:41:35,610 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:41:35,611 INFO dLog [http-nio-8080-exec-6] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:41:35,611 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:41:35,617 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:41:35,617 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:41:35,618 INFO dLog [http-nio-8080-exec-8] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:41:35,618 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:41:35,624 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:41:35,624 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:41:35,626 INFO dLog [http-nio-8080-exec-9] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:41:35,626 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:41:38,271 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [2]
2022-02-21 13:41:38,271 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [2]
2022-02-21 13:41:38,271 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [2]
2022-02-21 13:41:38,272 INFO dLog [http-nio-8080-exec-10] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:41:38,272 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [2]
2022-02-21 13:41:38,272 INFO dLog [http-nio-8080-exec-10] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:41:38,273 INFO dLog [http-nio-8080-exec-10] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:41:38,273 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:42:09,881 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:42:09,882 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:42:09,882 INFO dLog [http-nio-8080-exec-1] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:42:09,882 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:42:09,889 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:42:09,889 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:42:09,889 INFO dLog [http-nio-8080-exec-2] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:42:09,890 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:42:09,896 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:42:09,896 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:42:09,897 INFO dLog [http-nio-8080-exec-3] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:42:09,898 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:42:12,918 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [3]
2022-02-21 13:42:12,918 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [3]
2022-02-21 13:42:12,918 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [3]
2022-02-21 13:42:12,919 INFO dLog [http-nio-8080-exec-4] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:42:12,919 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [3]
2022-02-21 13:42:12,919 INFO dLog [http-nio-8080-exec-4] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:42:12,919 INFO dLog [http-nio-8080-exec-4] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:42:12,919 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:43:03,875 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:43:03,875 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:43:03,876 INFO dLog [http-nio-8080-exec-5] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:43:03,876 INFO dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:43:03,882 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:43:03,882 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:43:03,882 INFO dLog [http-nio-8080-exec-7] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:43:03,882 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:43:03,889 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:43:03,889 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:43:03,891 INFO dLog [http-nio-8080-exec-6] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:43:03,891 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:43:06,432 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [3]
2022-02-21 13:43:06,432 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [3]
2022-02-21 13:43:06,432 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [3]
2022-02-21 13:43:06,432 INFO dLog [http-nio-8080-exec-8] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:43:06,433 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [3]
2022-02-21 13:43:06,433 INFO dLog [http-nio-8080-exec-8] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:43:06,433 INFO dLog [http-nio-8080-exec-8] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:43:06,433 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:44:38,788 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:44:38,788 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:44:38,788 INFO dLog [http-nio-8080-exec-10] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:44:38,788 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:44:38,795 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:44:38,795 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:44:38,796 INFO dLog [http-nio-8080-exec-1] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:44:38,796 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:44:38,801 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:44:38,801 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:44:38,803 INFO dLog [http-nio-8080-exec-2] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:44:38,803 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:44:40,440 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [3]
2022-02-21 13:44:40,440 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [3]
2022-02-21 13:44:40,440 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [3]
2022-02-21 13:44:40,441 INFO dLog [http-nio-8080-exec-3] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:44:40,441 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [3]
2022-02-21 13:44:40,442 INFO dLog [http-nio-8080-exec-3] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:44:40,442 INFO dLog [http-nio-8080-exec-3] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:44:40,442 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:44:45,430 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
Arguments: [DepositRequest(depositType=Cheque, accountId=3, reference=asdfsadf, amount=14234.0)]
2022-02-21 13:44:45,431 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cheque, accountId=3, reference=asdfsadf, amount=14234.0)]
2022-02-21 13:44:45,431 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Cheque]
2022-02-21 13:44:45,434 INFO dLog [http-nio-8080-exec-5] METHOD: findDepositTypeEntityByName
RETURNING: DepositTypeEntity(pk_deposit_type_id=2, name=Cheque)
2022-02-21 13:44:45,448 INFO dLog [http-nio-8080-exec-5] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=3, depositType=Cheque, reference=asdfsadf, dateDeposit=2022-02-21, amount=14234.0)])
2022-02-21 13:44:45,448 INFO dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.DepositController
Method: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=3, depositType=Cheque, reference=asdfsadf, dateDeposit=2022-02-21, amount=14234.0)])
2022-02-21 13:44:45,457 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
Arguments: [UpdateAccountRequest(accountId=3, accountType=Savings, availableBalance=14234, pendingBalance=14234)]
2022-02-21 13:44:45,457 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=3, accountType=Savings, availableBalance=14234, pendingBalance=14234)]
2022-02-21 13:44:45,458 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Savings]
2022-02-21 13:44:45,459 INFO dLog [http-nio-8080-exec-6] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=2, name=Savings)
2022-02-21 13:44:45,467 INFO dLog [http-nio-8080-exec-6] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=14234.0, pendingBalance=14234.0)])
2022-02-21 13:44:45,467 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=14234.0, pendingBalance=14234.0)])
2022-02-21 13:44:45,473 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [3]
2022-02-21 13:44:45,473 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [3]
2022-02-21 13:44:45,473 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [3]
2022-02-21 13:44:45,476 INFO dLog [http-nio-8080-exec-8] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=3, depositType=Cheque, reference=asdfsadf, dateDeposit=2022-02-21, amount=14234.0)])
2022-02-21 13:44:45,476 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [3]
2022-02-21 13:44:45,477 INFO dLog [http-nio-8080-exec-8] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:44:45,477 INFO dLog [http-nio-8080-exec-8] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cheque, transactionReference=asdfsadf, date=2022-02-21, amount=14234.0)])
2022-02-21 13:44:45,477 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cheque, transactionReference=asdfsadf, date=2022-02-21, amount=14234.0)])
2022-02-21 13:45:21,155 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:45:21,155 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:45:21,156 INFO dLog [http-nio-8080-exec-9] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:45:21,156 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:45:21,162 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:45:21,162 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:45:21,164 INFO dLog [http-nio-8080-exec-10] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:45:21,164 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:45:21,170 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:45:21,170 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:45:21,172 INFO dLog [http-nio-8080-exec-1] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=14234.0, pendingBalance=14234.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:45:21,172 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=14234.0, pendingBalance=14234.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:45:22,279 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [3]
2022-02-21 13:45:22,279 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [3]
2022-02-21 13:45:22,279 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [3]
2022-02-21 13:45:22,281 INFO dLog [http-nio-8080-exec-2] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=3, depositType=Cheque, reference=asdfsadf, dateDeposit=2022-02-21, amount=14234.0)])
2022-02-21 13:45:22,281 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [3]
2022-02-21 13:45:22,282 INFO dLog [http-nio-8080-exec-2] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:45:22,282 INFO dLog [http-nio-8080-exec-2] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cheque, transactionReference=asdfsadf, date=2022-02-21, amount=14234.0)])
2022-02-21 13:45:22,282 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cheque, transactionReference=asdfsadf, date=2022-02-21, amount=14234.0)])
2022-02-21 13:46:27,190 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:46:27,191 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 13:46:27,191 INFO dLog [http-nio-8080-exec-4] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:46:27,191 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 13:46:27,199 DEBUG dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 13:46:27,199 DEBUG dLog [http-nio-8080-exec-5] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 13:46:27,202 INFO dLog [http-nio-8080-exec-5] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:46:27,202 INFO dLog [http-nio-8080-exec-5] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 13:46:27,208 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 13:46:27,208 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 13:46:27,210 INFO dLog [http-nio-8080-exec-7] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=14234.0, pendingBalance=14234.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:46:27,210 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=2, userId=1, accountType=Savings, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=3, userId=1, accountType=Savings, availableBalance=14234.0, pendingBalance=14234.0), AccountResponseObject(accountId=4, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0), AccountResponseObject(accountId=9, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 13:46:28,849 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [3]
2022-02-21 13:46:28,849 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [3]
2022-02-21 13:46:28,849 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [3]
2022-02-21 13:46:28,851 INFO dLog [http-nio-8080-exec-6] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[DepositResponseObject(depositId=1, accountId=3, depositType=Cheque, reference=asdfsadf, dateDeposit=2022-02-21, amount=14234.0)])
2022-02-21 13:46:28,851 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [3]
2022-02-21 13:46:28,852 INFO dLog [http-nio-8080-exec-6] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 13:46:28,852 INFO dLog [http-nio-8080-exec-6] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cheque, transactionReference=asdfsadf, date=2022-02-21, amount=14234.0)])
2022-02-21 13:46:28,852 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cheque, transactionReference=asdfsadf, date=2022-02-21, amount=14234.0)])
2022-02-21 14:02:29,183 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 14:02:29,194 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 14:02:29,262 INFO dLog [http-nio-8080-exec-2] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 14:02:29,263 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 14:02:29,309 DEBUG dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 14:02:29,313 DEBUG dLog [http-nio-8080-exec-3] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 14:02:29,352 INFO dLog [http-nio-8080-exec-3] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 14:02:29,352 INFO dLog [http-nio-8080-exec-3] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 14:02:29,366 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 14:02:29,371 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 14:02:29,382 INFO dLog [http-nio-8080-exec-4] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:02:29,382 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:02:31,780 DEBUG dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
Arguments: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 14:02:31,780 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 14:02:31,780 DEBUG dLog [http-nio-8080-exec-6] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 14:02:31,785 INFO dLog [http-nio-8080-exec-6] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 14:02:31,813 INFO dLog [http-nio-8080-exec-6] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 14:02:31,813 INFO dLog [http-nio-8080-exec-6] Class: class com.revature.thevault.presentation.controller.AccountController
Method: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 14:02:32,697 DEBUG dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-21 14:02:32,699 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 14:02:32,702 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-21 14:02:32,707 INFO dLog [http-nio-8080-exec-7] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:02:32,708 DEBUG dLog [http-nio-8080-exec-7] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 14:02:32,714 INFO dLog [http-nio-8080-exec-7] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:02:32,715 INFO dLog [http-nio-8080-exec-7] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:02:32,715 INFO dLog [http-nio-8080-exec-7] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:02:45,220 DEBUG dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-21 14:02:45,220 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 14:02:45,220 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-21 14:02:45,221 INFO dLog [http-nio-8080-exec-8] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:02:45,221 DEBUG dLog [http-nio-8080-exec-8] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 14:02:45,222 INFO dLog [http-nio-8080-exec-8] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:02:45,222 INFO dLog [http-nio-8080-exec-8] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:02:45,222 INFO dLog [http-nio-8080-exec-8] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:03:12,620 DEBUG dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
Arguments: [LoginRequest(username=username1, password=password1)]
2022-02-21 14:03:12,621 DEBUG dLog [http-nio-8080-exec-9] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: getLoginCredentialFromLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 14:03:12,622 INFO dLog [http-nio-8080-exec-9] METHOD: getLoginCredentialFromLogin
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 14:03:12,622 INFO dLog [http-nio-8080-exec-9] Class: class com.revature.thevault.presentation.controller.LoginController
Method: findLoginCredential
RETURNING: PostResponse(createdObject=[LoginResponseObject(userId=1, username=username1, password=password1)])
2022-02-21 14:03:12,629 DEBUG dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 14:03:12,630 DEBUG dLog [http-nio-8080-exec-10] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 14:03:12,631 INFO dLog [http-nio-8080-exec-10] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 14:03:12,631 INFO dLog [http-nio-8080-exec-10] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 14:03:12,637 DEBUG dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
Arguments: [1]
2022-02-21 14:03:12,637 DEBUG dLog [http-nio-8080-exec-1] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 14:03:12,640 INFO dLog [http-nio-8080-exec-1] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 14:03:12,640 INFO dLog [http-nio-8080-exec-1] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getUserAccountList
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=0.0, pendingBalance=0.0)])
2022-02-21 14:03:14,901 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
Arguments: [1]
2022-02-21 14:03:14,901 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 14:03:14,902 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-21 14:03:14,902 INFO dLog [http-nio-8080-exec-2] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:03:14,903 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 14:03:14,904 INFO dLog [http-nio-8080-exec-2] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:03:14,904 INFO dLog [http-nio-8080-exec-2] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:03:14,904 INFO dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.TransactionController
Method: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 14:53:17,683 DEBUG dLog [http-nio-8080-exec-2] Class: class com.revature.thevault.presentation.controller.AccountController
Method: getAccount
Arguments: [1]
2022-02-21 14:53:17,698 DEBUG dLog [http-nio-8080-exec-2] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 14:53:17,759 ERROR dLog [http-nio-8080-exec-2] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@72970481
2022-02-21 14:53:17,760 ERROR dLog [http-nio-8080-exec-2] CONTROLLER CLASS: class com.revature.thevault.presentation.controller.AccountController
METHOD: getAccount
THROWING EXCEPTION: class com.revature.thevault.service.exceptions.InvalidAccountIdException
2022-02-21 14:53:43,889 DEBUG dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
Arguments: [1]
2022-02-21 14:53:43,893 DEBUG dLog [http-nio-8080-exec-4] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: getProfile
ARGUMENTS: [AccountProfileRequest(profileId=1)]
2022-02-21 14:53:43,941 INFO dLog [http-nio-8080-exec-4] METHOD: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 14:53:43,942 INFO dLog [http-nio-8080-exec-4] Class: class com.revature.thevault.presentation.controller.AccountProfileController
Method: getProfile
RETURNING: GetResponse(gotObject=[AccountProfileResponse(profileId=1, userId=1, firstName=Tom, lastName=Cat, email=email@email.com, phoneNumber=5559991234, address=1 lane)])
2022-02-21 15:33:52,472 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-21 15:33:52,514 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-21 15:33:55,335 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 15:33:55,343 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@55fee2c5
2022-02-21 15:33:55,354 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-21 15:33:55,356 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@36fa1d17
2022-02-21 15:33:55,367 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 15:33:55,368 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:33:55,376 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-21 15:33:55,377 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-21 15:33:55,386 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-21 15:33:55,388 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 15:33:55,395 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 15:33:55,395 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:33:55,403 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 15:33:55,404 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:33:55,411 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-21 15:33:55,412 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@78110383
2022-02-21 15:33:55,422 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 15:33:55,422 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4b2b3da0
2022-02-21 15:33:55,428 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-21 15:33:55,428 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@25f13cc7
2022-02-21 15:33:55,435 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 15:33:55,435 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7c1d990f
2022-02-21 15:33:55,442 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 15:33:55,443 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:33:55,451 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-21 15:33:55,452 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5a688502
2022-02-21 15:33:55,458 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 15:33:55,458 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6fbb3122
2022-02-21 15:33:57,436 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-21 15:33:57,444 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-21, amount=100.0)])
2022-02-21 15:33:59,293 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 15:33:59,299 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-21 15:34:01,041 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 15:34:01,046 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6aa872ae
2022-02-21 15:34:01,054 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 15:34:01,055 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2bc794d8
2022-02-21 15:34:01,060 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 15:34:01,061 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@30557908
2022-02-21 15:34:01,068 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 15:34:01,069 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@44882526
2022-02-21 15:34:01,077 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 15:34:01,078 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@78fd4233
2022-02-21 15:34:01,085 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 15:34:01,085 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@530f2e70
2022-02-21 15:34:01,090 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 15:34:01,090 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@562b9022
2022-02-21 15:34:01,097 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 15:34:01,098 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@435af991
2022-02-21 15:34:01,104 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 15:34:01,105 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@497adb58
2022-02-21 15:34:01,109 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 15:34:01,110 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@221c88d9
2022-02-21 15:34:01,116 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 15:34:01,116 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2a2bf5a2
2022-02-21 15:34:01,121 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 15:34:01,129 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:34:01,134 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 15:34:01,135 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:34:01,141 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 15:34:01,141 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 15:34:01,148 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 15:34:01,148 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:34:01,154 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 15:34:01,154 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:38:41,170 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-21 15:38:41,185 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-21 15:38:43,863 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 15:38:43,873 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4dfc5b71
2022-02-21 15:38:43,887 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-21 15:38:43,888 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3ec850fd
2022-02-21 15:38:43,902 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 15:38:43,903 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:38:43,914 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-21 15:38:43,916 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-21 15:38:43,928 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-21 15:38:43,931 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 15:38:43,941 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 15:38:43,941 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:38:43,950 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 15:38:43,951 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:38:43,962 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-21 15:38:43,963 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@575214a
2022-02-21 15:38:43,972 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 15:38:43,972 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2a11615e
2022-02-21 15:38:43,980 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-21 15:38:43,980 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@8990bb9
2022-02-21 15:38:43,987 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 15:38:43,987 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4d056cef
2022-02-21 15:38:43,994 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 15:38:43,994 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:38:44,006 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-21 15:38:44,007 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@18872840
2022-02-21 15:38:44,016 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 15:38:44,017 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6df27d21
2022-02-21 15:38:46,117 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-21 15:38:46,124 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-21, amount=100.0)])
2022-02-21 15:38:46,130 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-21 15:38:46,131 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 15:38:46,147 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: getAllUserDeposits
ARGUMENTS: [1]
2022-02-21 15:38:46,148 INFO dLog [main] METHOD: getAllUserDeposits
RETURNING: GetResponse(gotObject=[])
2022-02-21 15:38:48,005 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 15:38:48,011 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-21 15:38:49,784 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 15:38:49,788 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5840efa
2022-02-21 15:38:49,796 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 15:38:49,797 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@60200842
2022-02-21 15:38:49,802 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 15:38:49,802 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3f35dedf
2022-02-21 15:38:49,809 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 15:38:49,809 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@ed7f10b
2022-02-21 15:38:49,814 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 15:38:49,814 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1cd14b3d
2022-02-21 15:38:49,820 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 15:38:49,820 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2bdb62a2
2022-02-21 15:38:49,825 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 15:38:49,825 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1ab5817b
2022-02-21 15:38:49,831 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 15:38:49,832 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1f70d9cf
2022-02-21 15:38:49,836 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 15:38:49,837 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@29f82d03
2022-02-21 15:38:49,843 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 15:38:49,843 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@52b1d6b2
2022-02-21 15:38:49,848 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 15:38:49,849 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4e248d4a
2022-02-21 15:38:49,853 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 15:38:49,860 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:38:49,864 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 15:38:49,865 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:38:49,871 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 15:38:49,871 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 15:38:49,876 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 15:38:49,876 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:38:49,882 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 15:38:49,883 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:45:28,046 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-21 15:45:28,062 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-21 15:45:30,539 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 15:45:30,549 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@47872c28
2022-02-21 15:45:30,560 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-21 15:45:30,561 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@779a1e7e
2022-02-21 15:45:30,573 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 15:45:30,574 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:45:30,583 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-21 15:45:30,585 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-21 15:45:30,594 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-21 15:45:30,596 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 15:45:30,603 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 15:45:30,604 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:45:30,613 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 15:45:30,614 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:45:30,628 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-21 15:45:30,629 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7c1d990f
2022-02-21 15:45:30,638 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 15:45:30,639 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7ffe1a33
2022-02-21 15:45:30,647 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-21 15:45:30,647 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5426f8e
2022-02-21 15:45:30,655 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 15:45:30,655 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@14bc0473
2022-02-21 15:45:30,661 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 15:45:30,661 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 15:45:30,668 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-21 15:45:30,669 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@34902031
2022-02-21 15:45:30,675 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 15:45:30,676 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3eccd78b
2022-02-21 15:45:32,539 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-21 15:45:32,546 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-21, amount=100.0)])
2022-02-21 15:45:34,295 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 15:45:34,303 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-21 15:45:35,977 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 15:45:35,981 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7f5f52ab
2022-02-21 15:45:35,987 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 15:45:35,988 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3a9637ce
2022-02-21 15:45:35,992 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 15:45:35,993 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@640afa80
2022-02-21 15:45:35,999 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 15:45:36,000 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@cb35f11
2022-02-21 15:45:36,006 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 15:45:36,006 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1ef9a7bc
2022-02-21 15:45:36,010 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 15:45:36,011 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@528fe28f
2022-02-21 15:45:36,015 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 15:45:36,015 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@44d26418
2022-02-21 15:45:36,020 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 15:45:36,021 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5a3d198c
2022-02-21 15:45:36,025 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 15:45:36,026 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@d984477
2022-02-21 15:45:36,030 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 15:45:36,031 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4dcc40c5
2022-02-21 15:45:36,038 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 15:45:36,038 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@625bb7c2
2022-02-21 15:45:36,044 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 15:45:36,050 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:45:36,055 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 15:45:36,056 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:45:36,061 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 15:45:36,061 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 15:45:36,066 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 15:45:36,066 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 15:45:36,070 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 15:45:36,071 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 18:44:32,427 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:44:32,445 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0)])
2022-02-21 18:46:41,926 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:46:41,940 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:52:26,484 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:52:26,501 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:53:09,919 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:53:09,936 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:57:47,951 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:57:47,968 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:57:47,972 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:57:47,973 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:58:27,838 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:58:27,859 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:58:27,864 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:58:27,864 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:58:46,425 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:58:46,444 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:58:46,449 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:58:46,450 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:59:15,418 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:59:15,435 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 18:59:15,439 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 18:59:15,440 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 19:02:15,141 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [2]
2022-02-21 19:02:15,163 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 19:03:24,901 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [-1]
2022-02-21 19:03:24,918 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
THROWING EXCEPTION CLASS: class java.lang.NullPointerException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6be2b567
2022-02-21 19:08:28,346 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [-1]
2022-02-21 19:08:28,352 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@64fba3e6
2022-02-21 19:11:37,520 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 19:11:37,525 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4f1a5b93
2022-02-21 19:11:37,544 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 19:11:37,544 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1a5a4f8
2022-02-21 19:11:37,552 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 19:11:37,552 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3663af34
2022-02-21 19:11:37,563 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 19:11:37,563 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2987b699
2022-02-21 19:11:37,571 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 19:11:37,571 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4e9695cf
2022-02-21 19:11:37,579 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 19:11:37,579 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@43e86c0c
2022-02-21 19:11:37,585 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 19:11:37,586 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@c6c58ce
2022-02-21 19:11:37,593 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 19:11:37,594 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@178ebac3
2022-02-21 19:11:37,600 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 19:11:37,600 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@17063c32
2022-02-21 19:11:37,605 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 19:11:37,606 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@79c2bc34
2022-02-21 19:11:37,612 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 19:11:37,613 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@77925f76
2022-02-21 19:11:37,624 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 19:11:37,646 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:11:37,654 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 19:11:37,655 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:11:37,662 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 19:11:37,663 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 19:11:37,667 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 19:11:37,668 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:11:37,675 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 19:11:37,675 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:12:11,184 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-21 19:12:11,202 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-21 19:12:13,301 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 19:12:13,309 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5a6c64e8
2022-02-21 19:12:13,319 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-21 19:12:13,320 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@74ee87d0
2022-02-21 19:12:13,329 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 19:12:13,330 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:12:13,338 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-21 19:12:13,340 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-21 19:12:13,348 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-21 19:12:13,351 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 19:12:13,359 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 19:12:13,359 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:12:13,366 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 19:12:13,366 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:12:13,373 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-21 19:12:13,374 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@3e835093
2022-02-21 19:12:13,381 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 19:12:13,381 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@22382761
2022-02-21 19:12:13,389 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-21 19:12:13,389 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@742095b0
2022-02-21 19:12:13,397 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 19:12:13,398 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@64392333
2022-02-21 19:12:13,406 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 19:12:13,407 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:12:13,414 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-21 19:12:13,415 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4d654cdb
2022-02-21 19:12:13,420 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 19:12:13,421 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2f82d417
2022-02-21 19:12:15,122 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-21 19:12:15,129 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-21, amount=100.0)])
2022-02-21 19:12:16,645 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 19:12:16,651 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-21 19:12:18,203 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 19:12:18,212 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 19:12:18,212 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 19:12:18,212 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 19:12:18,218 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [2]
2022-02-21 19:12:18,218 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 19:12:18,223 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [-1]
2022-02-21 19:12:18,223 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@61fd77b8
2022-02-21 19:12:19,643 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 19:12:19,644 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@158c442a
2022-02-21 19:12:19,650 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 19:12:19,650 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@616f827b
2022-02-21 19:12:19,655 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 19:12:19,655 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5498dd23
2022-02-21 19:12:19,661 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 19:12:19,661 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@c15a439
2022-02-21 19:12:19,666 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 19:12:19,666 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@66a18ec9
2022-02-21 19:12:19,670 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 19:12:19,671 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4861f707
2022-02-21 19:12:19,675 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 19:12:19,676 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1d3b987
2022-02-21 19:12:19,680 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 19:12:19,681 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2c70b317
2022-02-21 19:12:19,686 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 19:12:19,686 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@60fa3681
2022-02-21 19:12:19,691 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 19:12:19,691 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@7cf9a498
2022-02-21 19:12:19,695 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 19:12:19,696 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@62cc289d
2022-02-21 19:12:19,700 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 19:12:19,705 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:12:19,710 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 19:12:19,711 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:12:19,715 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 19:12:19,715 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 19:12:19,721 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 19:12:19,722 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:12:19,727 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 19:12:19,728 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:15:40,740 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-21 19:15:40,757 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-21 19:15:42,899 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 19:15:42,908 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@ae3d6a0
2022-02-21 19:15:42,918 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-21 19:15:42,919 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@6bf4ae42
2022-02-21 19:15:42,931 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 19:15:42,932 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:15:42,943 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-21 19:15:42,945 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-21 19:15:42,958 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-21 19:15:42,960 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 19:15:42,970 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 19:15:42,971 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:15:42,980 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 19:15:42,981 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:15:42,988 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-21 19:15:42,989 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@11d1fcf2
2022-02-21 19:15:42,997 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 19:15:42,998 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@77321925
2022-02-21 19:15:43,007 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-21 19:15:43,008 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4adc44a2
2022-02-21 19:15:43,016 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 19:15:43,017 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@40ab2770
2022-02-21 19:15:43,025 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 19:15:43,026 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:15:43,035 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-21 19:15:43,036 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@53314807
2022-02-21 19:15:43,045 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 19:15:43,045 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@52db6e27
2022-02-21 19:15:44,823 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-21 19:15:44,829 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-21, amount=100.0)])
2022-02-21 19:15:46,443 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 19:15:46,451 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-21 19:15:47,980 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 19:15:47,989 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 19:15:47,989 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 19:15:47,989 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 19:15:47,995 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [2]
2022-02-21 19:15:47,996 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 19:15:48,000 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [-1]
2022-02-21 19:15:48,001 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@39150e3b
2022-02-21 19:15:49,464 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 19:15:49,465 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@26a4052
2022-02-21 19:15:49,470 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 19:15:49,471 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@1ab49f7b
2022-02-21 19:15:49,475 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 19:15:49,475 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@4627f22c
2022-02-21 19:15:49,481 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 19:15:49,482 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@c9b3ad6
2022-02-21 19:15:49,486 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 19:15:49,487 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@5bac1ed
2022-02-21 19:15:49,491 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 19:15:49,492 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@50bd1398
2022-02-21 19:15:49,498 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 19:15:49,498 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@669df06a
2022-02-21 19:15:49,504 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 19:15:49,504 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@de20409
2022-02-21 19:15:49,509 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 19:15:49,510 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@269a0030
2022-02-21 19:15:49,515 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 19:15:49,515 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@2f8dba29
2022-02-21 19:15:49,520 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 19:15:49,521 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@451bdb3d
2022-02-21 19:15:49,525 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 19:15:49,530 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:15:49,534 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 19:15:49,535 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:15:49,539 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 19:15:49,540 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 19:15:49,544 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 19:15:49,545 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:15:49,550 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 19:15:49,550 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:17:57,783 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [-1]
2022-02-21 19:17:57,798 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidWithdrawIdRequest
EXCEPTION STACKTRACE: [Ljava.lang.StackTraceElement;@72641613
2022-02-21 19:19:44,589 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [-1]
2022-02-21 19:19:44,610 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidWithdrawIdRequest
EXCEPTION STACKTRACE: [com.revature.thevault.service.classes.WithdrawService.findByWithdrawId(WithdrawService.java:112), com.revature.thevault.service.classes.WithdrawService$$FastClassBySpringCGLIB$$61f6c24c.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698), com.revature.thevault.service.classes.WithdrawService$$EnhancerBySpringCGLIB$$edb39bd0.findByWithdrawId(<generated>), com.revature.thevault.service.classes.WithdrawServiceTest.lambda$FindByWithdrawIdInvalidWithdrawIdException$3(WithdrawServiceTest.java:178), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:55), org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:37), org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:3082), com.revature.thevault.service.classes.WithdrawServiceTest.FindByWithdrawIdInvalidWithdrawIdException(WithdrawServiceTest.java:178), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725), org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60), org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131), org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140), org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84), org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115), org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105), org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106), org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64), org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45), org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104), org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135), org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), java.util.ArrayList.forEach(ArrayList.java:1259), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141), org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137), org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139), org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73), org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138), org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95), org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35), org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57), org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88), org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54), org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67), org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114), org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86), org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86), org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53), com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71), com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33), com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235), com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)]
2022-02-21 19:20:47,979 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [-1]
2022-02-21 19:20:47,992 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidWithdrawIdRequest
MESSAGE: 400 BAD_REQUEST "Withdraw not found, withdraw Id: -1"
2022-02-21 19:31:58,372 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 19:31:58,393 INFO dLog [main] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 19:33:24,430 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [lol]
2022-02-21 19:33:24,448 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 400 BAD_REQUEST "Invalid Account Type Provided: lol"
2022-02-21 19:35:08,109 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [null]
2022-02-21 19:35:08,113 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 19:35:08,132 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: []
2022-02-21 19:35:08,133 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 19:35:08,141 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [a]
2022-02-21 19:35:08,142 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 19:35:08,147 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 19:35:08,148 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 19:35:21,228 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 19:35:21,244 INFO dLog [main] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 19:35:21,264 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [lol]
2022-02-21 19:35:21,265 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 400 BAD_REQUEST "Invalid Account Type Provided: lol"
2022-02-21 19:35:21,301 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [null]
2022-02-21 19:35:21,301 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 19:35:21,310 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: []
2022-02-21 19:35:21,310 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 19:35:21,319 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [a]
2022-02-21 19:35:21,319 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 19:35:21,325 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 19:35:21,326 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 19:56:25,098 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Invalid]
2022-02-21 19:56:25,114 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Status type not found: Invalid"
2022-02-21 19:56:25,127 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Pending]
2022-02-21 19:56:25,127 INFO dLog [main] METHOD: getRequestStatusByName
RETURNING: RequestStatusEntity(pk_request_status_id=1, name=Pending)
2022-02-21 19:56:25,169 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [null]
2022-02-21 19:56:25,169 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 19:56:25,177 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: []
2022-02-21 19:56:25,177 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 19:56:25,186 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [a]
2022-02-21 19:56:25,186 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 19:56:25,192 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 19:56:25,192 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 19:56:41,923 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [null]
2022-02-21 19:56:41,927 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 19:56:41,942 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: []
2022-02-21 19:56:41,943 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 19:56:41,950 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [a]
2022-02-21 19:56:41,950 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 19:56:41,956 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 19:56:41,956 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 19:56:41,961 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Retail]
2022-02-21 19:56:41,972 INFO dLog [main] METHOD: getRequestTypeByName
RETURNING: RequestTypeEntity(pk_request_type_id=1, name=Retail)
2022-02-21 19:56:41,978 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Invalid]
2022-02-21 19:56:41,979 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Type not found: Invalid"
2022-02-21 19:57:06,001 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-21 19:57:06,016 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-21 19:57:08,186 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 19:57:08,195 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 19:57:08,204 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000)]
2022-02-21 19:57:08,205 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000"
2022-02-21 19:57:08,215 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 19:57:08,216 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:57:08,223 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10)]
2022-02-21 19:57:08,224 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-21 19:57:08,231 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100, pendingBalance=100)]
2022-02-21 19:57:08,232 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 19:57:08,239 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 19:57:08,240 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:57:08,246 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 19:57:08,247 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:57:08,254 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0, pendingBalance=0)]
2022-02-21 19:57:08,254 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id Provided: -1"
2022-02-21 19:57:08,260 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 19:57:08,260 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
MESSAGE: 400 BAD_REQUEST "Invalid User Id Provided: -1"
2022-02-21 19:57:08,267 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10)]
2022-02-21 19:57:08,268 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id Provided: -1"
2022-02-21 19:57:08,274 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 19:57:08,275 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id for delete request: -1"
2022-02-21 19:57:08,280 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 19:57:08,281 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 19:57:08,287 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10)]
2022-02-21 19:57:08,288 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id Provided: -1"
2022-02-21 19:57:08,293 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 19:57:08,293 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id Provided: -1"
2022-02-21 19:57:10,173 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 19:57:10,180 INFO dLog [main] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 19:57:10,185 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Invalid]
2022-02-21 19:57:10,185 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 400 BAD_REQUEST "Invalid Account Type Provided: Invalid"
2022-02-21 19:57:10,221 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [null]
2022-02-21 19:57:10,222 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 19:57:10,229 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: []
2022-02-21 19:57:10,229 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 19:57:10,236 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [a]
2022-02-21 19:57:10,236 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 19:57:10,240 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 19:57:10,240 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 19:57:11,866 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-21 19:57:11,871 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-21, amount=100.0)])
2022-02-21 19:57:13,560 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 19:57:13,566 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-21 19:57:15,106 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Invalid]
2022-02-21 19:57:15,110 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Status type not found: Invalid"
2022-02-21 19:57:15,113 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Pending]
2022-02-21 19:57:15,114 INFO dLog [main] METHOD: getRequestStatusByName
RETURNING: RequestStatusEntity(pk_request_status_id=1, name=Pending)
2022-02-21 19:57:15,119 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [null]
2022-02-21 19:57:15,119 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 19:57:15,124 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: []
2022-02-21 19:57:15,124 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 19:57:15,129 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [a]
2022-02-21 19:57:15,129 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 19:57:15,134 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 19:57:15,134 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 19:57:16,720 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [null]
2022-02-21 19:57:16,720 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 19:57:16,725 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: []
2022-02-21 19:57:16,725 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 19:57:16,729 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [a]
2022-02-21 19:57:16,730 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 19:57:16,733 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 19:57:16,734 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 19:57:16,737 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Retail]
2022-02-21 19:57:16,741 INFO dLog [main] METHOD: getRequestTypeByName
RETURNING: RequestTypeEntity(pk_request_type_id=1, name=Retail)
2022-02-21 19:57:16,746 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Invalid]
2022-02-21 19:57:16,746 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Type not found: Invalid"
2022-02-21 19:57:18,312 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 19:57:18,317 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 19:57:18,317 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 19:57:18,318 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 19:57:18,323 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [2]
2022-02-21 19:57:18,324 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 19:57:18,328 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [-1]
2022-02-21 19:57:18,328 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid account Id Provided: -1"
2022-02-21 19:57:19,743 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [-1]
2022-02-21 19:57:19,747 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidWithdrawIdRequest
MESSAGE: 400 BAD_REQUEST "Withdraw not found, withdraw Id: -1"
2022-02-21 19:57:19,753 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 19:57:19,753 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: 0.0"
2022-02-21 19:57:19,758 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 19:57:19,759 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -1.0"
2022-02-21 19:57:19,764 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 19:57:19,764 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -2123.0"
2022-02-21 19:57:19,769 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 19:57:19,769 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 19:57:19,773 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 19:57:19,774 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 19:57:19,778 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 19:57:19,779 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf"
2022-02-21 19:57:19,783 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 19:57:19,783 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 19:57:19,788 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 19:57:19,789 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 19:57:19,793 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 19:57:19,794 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 19:57:19,798 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 19:57:19,799 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf"
2022-02-21 19:57:19,803 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 19:57:19,804 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 19:57:19,808 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 19:57:19,808 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:57:19,812 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 19:57:19,813 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:57:19,818 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 19:57:19,818 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 19:57:19,823 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 19:57:19,823 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 19:57:19,828 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 19:57:19,828 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:05:39,937 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [null]
2022-02-21 20:05:39,941 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:05:39,957 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: []
2022-02-21 20:05:39,957 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:05:39,965 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [a]
2022-02-21 20:05:39,965 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:05:39,970 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:05:39,970 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:05:39,975 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Cash]
2022-02-21 20:05:39,987 INFO dLog [main] METHOD: findDepositTypeEntityByName
RETURNING: DepositTypeEntity(pk_deposit_type_id=1, name=Cash)
2022-02-21 20:05:39,994 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Invalid]
2022-02-21 20:05:39,994 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Deposit type not found: Invalid"
2022-02-21 20:18:25,109 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:18:25,127 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:18:25,144 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:18:25,145 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:18:25,153 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:18:25,153 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=120.0)])
2022-02-21 20:18:25,163 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:18:25,163 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=110.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=130.0)])
2022-02-21 20:18:25,169 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:18:25,170 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:18:25,176 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:18:25,177 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:18:25,188 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:18:25,189 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:18:25,195 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:18:25,195 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:18:25,205 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:18:25,206 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
MESSAGE: 400 BAD_REQUEST "Invalid User Id Provided: -1"
2022-02-21 20:18:25,214 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:18:25,214 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:18:25,223 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:18:25,223 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id for delete request: -1"
2022-02-21 20:18:25,231 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:18:25,231 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:18:25,241 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:18:25,241 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:18:25,251 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:18:25,251 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id Provided: -1"
2022-02-21 20:19:37,793 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:19:37,810 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:19:37,824 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:19:37,825 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:19:37,832 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:19:37,833 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:19:37,841 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:19:37,842 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=90.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=110.0)])
2022-02-21 20:19:37,847 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:19:37,848 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:19:37,854 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:19:37,855 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:19:37,861 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:19:37,861 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:19:37,867 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:19:37,867 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:19:37,881 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:19:37,881 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
MESSAGE: 400 BAD_REQUEST "Invalid User Id Provided: -1"
2022-02-21 20:19:37,887 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:19:37,887 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:19:37,895 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:19:37,895 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id for delete request: -1"
2022-02-21 20:19:37,901 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:19:37,902 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:19:37,909 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:19:37,909 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:19:37,917 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:19:37,917 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id Provided: -1"
2022-02-21 20:20:53,086 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:20:53,103 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:20:53,119 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:20:53,120 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:20:53,128 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:20:53,128 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:20:53,137 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:20:53,138 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=90.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=110.0)])
2022-02-21 20:20:53,144 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:20:53,145 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:20:53,152 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:20:53,153 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:20:53,160 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:20:53,160 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:20:53,165 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:20:53,166 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:20:53,171 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:20:53,172 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
MESSAGE: 400 BAD_REQUEST "Invalid User Id Provided: -1"
2022-02-21 20:20:53,179 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:20:53,179 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:20:53,185 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:20:53,186 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id for delete request: -1"
2022-02-21 20:20:53,192 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:20:53,192 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:20:53,198 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:20:53,199 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:20:53,204 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:20:53,205 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id Provided: -1"
2022-02-21 20:21:19,464 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-21 20:21:19,479 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-21 20:21:21,780 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:21:21,793 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:21:21,803 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:21:21,804 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:21:21,815 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:21:21,816 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:21:21,827 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:21:21,829 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=90.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=110.0)])
2022-02-21 20:21:21,838 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:21:21,839 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:21:21,844 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:21:21,845 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:21:21,851 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:21:21,852 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:21:21,857 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:21:21,858 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:21:21,863 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:21:21,864 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidUserIdException
MESSAGE: 400 BAD_REQUEST "Invalid User Id Provided: -1"
2022-02-21 20:21:21,870 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:21:21,871 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:21:21,877 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:21:21,878 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id for delete request: -1"
2022-02-21 20:21:21,883 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:21:21,884 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:21:21,890 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:21:21,890 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:21:21,896 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:21:21,896 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id Provided: -1"
2022-02-21 20:21:23,826 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 20:21:23,832 INFO dLog [main] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 20:21:23,837 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Invalid]
2022-02-21 20:21:23,838 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 400 BAD_REQUEST "Invalid Account Type Provided: Invalid"
2022-02-21 20:21:23,878 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [null]
2022-02-21 20:21:23,878 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:21:23,885 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: []
2022-02-21 20:21:23,885 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:21:23,892 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [a]
2022-02-21 20:21:23,892 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:21:23,896 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:21:23,896 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:21:25,665 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-21 20:21:25,671 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-21, amount=100.0)])
2022-02-21 20:21:27,377 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [null]
2022-02-21 20:21:27,377 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:21:27,381 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: []
2022-02-21 20:21:27,381 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:21:27,385 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [a]
2022-02-21 20:21:27,386 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:21:27,390 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:21:27,390 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:21:27,394 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Cash]
2022-02-21 20:21:27,398 INFO dLog [main] METHOD: findDepositTypeEntityByName
RETURNING: DepositTypeEntity(pk_deposit_type_id=1, name=Cash)
2022-02-21 20:21:27,402 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Invalid]
2022-02-21 20:21:27,403 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Deposit type not found: Invalid"
2022-02-21 20:21:29,176 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 20:21:29,181 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-21 20:21:31,204 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Invalid]
2022-02-21 20:21:31,208 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Status type not found: Invalid"
2022-02-21 20:21:31,212 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Pending]
2022-02-21 20:21:31,212 INFO dLog [main] METHOD: getRequestStatusByName
RETURNING: RequestStatusEntity(pk_request_status_id=1, name=Pending)
2022-02-21 20:21:31,219 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [null]
2022-02-21 20:21:31,219 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:21:31,224 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: []
2022-02-21 20:21:31,225 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:21:31,229 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [a]
2022-02-21 20:21:31,229 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:21:31,234 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:21:31,235 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:21:32,904 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [null]
2022-02-21 20:21:32,905 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:21:32,909 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: []
2022-02-21 20:21:32,909 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:21:32,913 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [a]
2022-02-21 20:21:32,913 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:21:32,918 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:21:32,918 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:21:32,922 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Retail]
2022-02-21 20:21:32,926 INFO dLog [main] METHOD: getRequestTypeByName
RETURNING: RequestTypeEntity(pk_request_type_id=1, name=Retail)
2022-02-21 20:21:32,930 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Invalid]
2022-02-21 20:21:32,930 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Type not found: Invalid"
2022-02-21 20:21:34,489 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 20:21:34,493 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 20:21:34,493 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 20:21:34,494 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 20:21:34,498 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [2]
2022-02-21 20:21:34,499 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 20:21:34,503 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [-1]
2022-02-21 20:21:34,503 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid account Id Provided: -1"
2022-02-21 20:21:36,096 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [-1]
2022-02-21 20:21:36,100 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidWithdrawIdRequest
MESSAGE: 400 BAD_REQUEST "Withdraw not found, withdraw Id: -1"
2022-02-21 20:21:36,106 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 20:21:36,106 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: 0.0"
2022-02-21 20:21:36,110 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 20:21:36,111 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -1.0"
2022-02-21 20:21:36,115 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 20:21:36,115 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -2123.0"
2022-02-21 20:21:36,120 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 20:21:36,120 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:21:36,125 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 20:21:36,125 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:21:36,129 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 20:21:36,129 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf"
2022-02-21 20:21:36,133 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 20:21:36,133 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:21:36,138 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 20:21:36,138 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:21:36,143 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 20:21:36,143 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:21:36,147 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 20:21:36,147 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf"
2022-02-21 20:21:36,151 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 20:21:36,152 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:21:36,155 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 20:21:36,156 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:21:36,160 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 20:21:36,160 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:21:36,164 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 20:21:36,165 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 20:21:36,169 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 20:21:36,169 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:21:36,173 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 20:21:36,173 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:25:37,403 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:25:37,422 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:25:37,438 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:25:37,440 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:25:37,448 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:25:37,448 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:25:37,458 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:25:37,459 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=90.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=110.0)])
2022-02-21 20:25:37,465 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:25:37,466 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:25:37,474 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:25:37,474 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:25:37,480 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:25:37,480 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:25:37,486 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:25:37,486 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:25:37,492 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:25:37,492 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class java.lang.IllegalArgumentException
MESSAGE: null
2022-02-21 20:25:37,506 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:25:37,506 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:25:37,512 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:25:37,512 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class javax.persistence.EntityNotFoundException
MESSAGE: null
2022-02-21 20:25:37,519 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:25:37,520 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:25:37,526 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:25:37,526 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:25:37,533 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:25:37,533 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class javax.persistence.EntityNotFoundException
MESSAGE: null
2022-02-21 20:27:05,986 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:27:06,005 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:27:06,020 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:27:06,021 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:27:06,029 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:27:06,029 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:27:06,038 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:27:06,039 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=90.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=110.0)])
2022-02-21 20:27:06,045 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:27:06,046 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:27:06,053 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:27:06,054 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:27:06,060 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:27:06,061 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:27:06,068 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:27:06,068 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:27:06,076 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:27:06,076 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class java.lang.IllegalArgumentException
MESSAGE: null
2022-02-21 20:27:06,089 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:27:06,089 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:27:06,096 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:27:06,096 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id for delete request: -1"
2022-02-21 20:27:06,104 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:27:06,104 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:27:06,111 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:27:06,112 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:27:06,118 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:27:06,118 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class javax.persistence.EntityNotFoundException
MESSAGE: null
2022-02-21 20:30:34,699 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:30:34,718 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:30:34,733 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:30:34,734 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:30:34,742 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:30:34,743 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:30:34,752 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:30:34,753 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=90.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=110.0)])
2022-02-21 20:30:34,759 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:30:34,759 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:30:34,766 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:30:34,767 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:30:34,773 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:30:34,773 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:30:34,778 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:30:34,778 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:30:34,784 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:30:34,785 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:30:34,798 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:30:34,799 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:30:34,804 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:30:34,805 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:30:34,823 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:30:34,824 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:30:34,829 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:30:34,830 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:30:34,835 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:30:34,835 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:12,709 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:31:12,726 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:31:12,741 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:31:12,742 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:31:12,750 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:31:12,750 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:12,760 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:31:12,761 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=90.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=110.0)])
2022-02-21 20:31:12,766 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:31:12,767 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:12,773 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:31:12,774 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:12,779 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:31:12,780 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:12,786 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:31:12,786 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:12,793 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:31:12,793 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:12,799 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:31:12,799 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:12,804 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:31:12,805 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:12,810 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:31:12,811 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:12,816 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:31:12,816 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:12,821 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:31:12,821 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:49,797 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-21 20:31:49,813 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-21 20:31:52,579 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:31:52,591 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:31:52,600 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:31:52,601 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:31:52,611 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:31:52,611 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:52,619 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:31:52,620 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=90.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=110.0)])
2022-02-21 20:31:52,627 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:31:52,627 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:52,633 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:31:52,634 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:52,640 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:31:52,640 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:52,647 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:31:52,647 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:52,653 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:31:52,653 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:52,658 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:31:52,658 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:52,664 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:31:52,664 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:52,670 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:31:52,670 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:31:52,677 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:31:52,677 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:52,682 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:31:52,682 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:31:54,821 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 20:31:54,826 INFO dLog [main] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 20:31:54,831 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Invalid]
2022-02-21 20:31:54,832 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 400 BAD_REQUEST "Invalid Account Type Provided: Invalid"
2022-02-21 20:31:54,876 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [null]
2022-02-21 20:31:54,876 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:31:54,883 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: []
2022-02-21 20:31:54,884 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:31:54,890 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [a]
2022-02-21 20:31:54,891 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:31:54,895 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:31:54,896 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:31:56,948 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-21 20:31:56,954 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-21, amount=100.0)])
2022-02-21 20:31:59,166 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [null]
2022-02-21 20:31:59,166 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:31:59,171 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: []
2022-02-21 20:31:59,172 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:31:59,177 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [a]
2022-02-21 20:31:59,177 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:31:59,183 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:31:59,183 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:31:59,189 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Cash]
2022-02-21 20:31:59,196 INFO dLog [main] METHOD: findDepositTypeEntityByName
RETURNING: DepositTypeEntity(pk_deposit_type_id=1, name=Cash)
2022-02-21 20:31:59,203 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Invalid]
2022-02-21 20:31:59,203 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Deposit type not found: Invalid"
2022-02-21 20:32:01,610 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 20:32:01,616 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-21 20:32:03,483 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Invalid]
2022-02-21 20:32:03,487 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Status type not found: Invalid"
2022-02-21 20:32:03,491 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Pending]
2022-02-21 20:32:03,492 INFO dLog [main] METHOD: getRequestStatusByName
RETURNING: RequestStatusEntity(pk_request_status_id=1, name=Pending)
2022-02-21 20:32:03,497 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [null]
2022-02-21 20:32:03,497 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:32:03,502 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: []
2022-02-21 20:32:03,502 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:32:03,507 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [a]
2022-02-21 20:32:03,507 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:32:03,513 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:32:03,513 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:32:05,412 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [null]
2022-02-21 20:32:05,413 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:32:05,417 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: []
2022-02-21 20:32:05,417 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:32:05,420 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [a]
2022-02-21 20:32:05,424 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:32:05,429 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:32:05,429 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:32:05,433 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Retail]
2022-02-21 20:32:05,436 INFO dLog [main] METHOD: getRequestTypeByName
RETURNING: RequestTypeEntity(pk_request_type_id=1, name=Retail)
2022-02-21 20:32:05,442 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Invalid]
2022-02-21 20:32:05,442 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Type not found: Invalid"
2022-02-21 20:32:07,282 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 20:32:07,287 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 20:32:07,287 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 20:32:07,288 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 20:32:07,293 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [2]
2022-02-21 20:32:07,294 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 20:32:07,299 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [-1]
2022-02-21 20:32:07,300 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid account Id Provided: -1"
2022-02-21 20:32:09,175 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [-1]
2022-02-21 20:32:09,180 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidWithdrawIdRequest
MESSAGE: 400 BAD_REQUEST "Withdraw not found, withdraw Id: -1"
2022-02-21 20:32:09,185 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 20:32:09,185 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: 0.0"
2022-02-21 20:32:09,190 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 20:32:09,190 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -1.0"
2022-02-21 20:32:09,194 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 20:32:09,194 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -2123.0"
2022-02-21 20:32:09,201 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 20:32:09,201 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:32:09,206 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 20:32:09,206 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:32:09,210 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 20:32:09,210 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf"
2022-02-21 20:32:09,215 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 20:32:09,216 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:32:09,220 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 20:32:09,220 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:32:09,225 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 20:32:09,225 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:32:09,229 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 20:32:09,229 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf"
2022-02-21 20:32:09,234 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 20:32:09,235 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:32:09,238 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 20:32:09,239 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:32:09,243 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 20:32:09,244 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:32:09,249 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 20:32:09,249 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 20:32:09,253 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 20:32:09,254 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:32:09,257 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 20:32:09,258 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:34:29,553 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [11111]
2022-02-21 20:34:29,569 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id for delete request: 11111"
2022-02-21 20:35:40,798 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountProfileService
METHOD: createProfile
ARGUMENTS: [ProfileCreateRequest(userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)]
2022-02-21 20:35:40,815 INFO dLog [main] METHOD: createProfile
RETURNING: PostResponse(createdObject=[AccountProfileResponse(profileId=1, userId=5, firstName=joe, lastName=something, email=asdf@fjfo.com, phoneNumber=555-555-5555, address=1 street)])
2022-02-21 20:35:43,358 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=lol)]
2022-02-21 20:35:43,373 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 0
2022-02-21 20:35:43,385 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=100000.0)]
2022-02-21 20:35:43,386 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 406 NOT_ACCEPTABLE "Owner Account: $100.0 Invalid Requested Amount: $100000.0"
2022-02-21 20:35:43,394 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [11111]
2022-02-21 20:35:43,395 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid Account Id for delete request: 11111"
2022-02-21 20:35:43,405 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [1]
2022-02-21 20:35:43,406 INFO dLog [main] METHOD: deleteAccount
RETURNING: DeleteResponse(deletedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:35:43,414 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:35:43,416 INFO dLog [main] METHOD: transferToAnotherAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=90.0, pendingBalance=90.0), AccountResponseObject(accountId=2, userId=2, accountType=Checking, availableBalance=100.0, pendingBalance=110.0)])
2022-02-21 20:35:43,422 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)]
2022-02-21 20:35:43,423 INFO dLog [main] METHOD: updateAccount
RETURNING: PutResponse(updatedObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:35:43,429 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [1]
2022-02-21 20:35:43,430 INFO dLog [main] METHOD: getAccount
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:35:43,436 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [1]
2022-02-21 20:35:43,436 INFO dLog [main] METHOD: getAccounts
RETURNING: GetResponse(gotObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:35:43,442 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
ARGUMENTS: [UpdateAccountRequest(accountId=-1, accountType=, availableBalance=0.0, pendingBalance=0.0)]
2022-02-21 20:35:43,442 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: updateAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:35:43,450 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
ARGUMENTS: [-1]
2022-02-21 20:35:43,450 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccounts
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:35:43,458 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=1, receiverAccountId=-1, amount=10.0)]
2022-02-21 20:35:43,458 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:35:43,464 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
ARGUMENTS: [-1]
2022-02-21 20:35:43,464 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: deleteAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:35:43,470 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: createAccount
ARGUMENTS: [CreateAccountRequest(userId=1, accountType=Checking)]
2022-02-21 20:35:43,471 INFO dLog [main] METHOD: createAccount
RETURNING: PostResponse(createdObject=[AccountResponseObject(accountId=1, userId=1, accountType=Checking, availableBalance=100.0, pendingBalance=100.0)])
2022-02-21 20:35:43,476 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
ARGUMENTS: [TransferRequest(ownerAccountId=-1, receiverAccountId=2, amount=10.0)]
2022-02-21 20:35:43,476 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: transferToAnotherAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:35:43,481 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
ARGUMENTS: [-1]
2022-02-21 20:35:43,482 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountService
METHOD: getAccount
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid integer, too small (less than 0): -1"
2022-02-21 20:35:45,691 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Checking]
2022-02-21 20:35:45,696 INFO dLog [main] METHOD: findAccountTypeEntityByName
RETURNING: AccountTypeEntity(pk_account_type_id=1, name=Checking)
2022-02-21 20:35:45,702 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [Invalid]
2022-02-21 20:35:45,702 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountTypeException
MESSAGE: 400 BAD_REQUEST "Invalid Account Type Provided: Invalid"
2022-02-21 20:35:45,747 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [null]
2022-02-21 20:35:45,747 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:35:45,755 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: []
2022-02-21 20:35:45,755 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:35:45,762 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [a]
2022-02-21 20:35:45,762 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:35:45,768 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:35:45,768 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.AccountTypeService
METHOD: findAccountTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:35:47,774 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositService
METHOD: createDeposit
ARGUMENTS: [DepositRequest(depositType=Cash, accountId=1, reference=work, amount=100.0)]
2022-02-21 20:35:47,781 INFO dLog [main] METHOD: createDeposit
RETURNING: PostResponse(createdObject=[DepositResponseObject(depositId=1, accountId=1, depositType=Cash, reference=work, dateDeposit=2022-02-21, amount=100.0)])
2022-02-21 20:35:49,822 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [null]
2022-02-21 20:35:49,822 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:35:49,826 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: []
2022-02-21 20:35:49,827 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:35:49,832 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [a]
2022-02-21 20:35:49,832 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:35:49,836 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:35:49,836 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:35:49,840 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Cash]
2022-02-21 20:35:49,845 INFO dLog [main] METHOD: findDepositTypeEntityByName
RETURNING: DepositTypeEntity(pk_deposit_type_id=1, name=Cash)
2022-02-21 20:35:49,848 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
ARGUMENTS: [Invalid]
2022-02-21 20:35:49,849 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.DepositTypeService
METHOD: findDepositTypeEntityByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Deposit type not found: Invalid"
2022-02-21 20:35:51,984 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.LoginService
METHOD: checkLogin
ARGUMENTS: [LoginRequest(username=username1, password=password1)]
2022-02-21 20:35:51,989 INFO dLog [main] METHOD: checkLogin
RETURNING: LoginResponse(success=true)
2022-02-21 20:35:53,824 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Invalid]
2022-02-21 20:35:53,829 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Status type not found: Invalid"
2022-02-21 20:35:53,833 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [Pending]
2022-02-21 20:35:53,834 INFO dLog [main] METHOD: getRequestStatusByName
RETURNING: RequestStatusEntity(pk_request_status_id=1, name=Pending)
2022-02-21 20:35:53,840 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [null]
2022-02-21 20:35:53,840 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:35:53,846 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: []
2022-02-21 20:35:53,846 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:35:53,852 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [a]
2022-02-21 20:35:53,852 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:35:53,858 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:35:53,859 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestStatusService
METHOD: getRequestStatusByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:35:55,873 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [null]
2022-02-21 20:35:55,873 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:35:55,879 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: []
2022-02-21 20:35:55,879 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:35:55,883 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [a]
2022-02-21 20:35:55,883 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:35:55,887 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [asdfasdfasdfasdfasdfasdfasdfasdf]
2022-02-21 20:35:55,888 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdf"
2022-02-21 20:35:55,893 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Retail]
2022-02-21 20:35:55,897 INFO dLog [main] METHOD: getRequestTypeByName
RETURNING: RequestTypeEntity(pk_request_type_id=1, name=Retail)
2022-02-21 20:35:55,902 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
ARGUMENTS: [Invalid]
2022-02-21 20:35:55,902 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.RequestTypeService
METHOD: getRequestTypeByName
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Request Type not found: Invalid"
2022-02-21 20:35:57,845 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 20:35:57,850 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 20:35:57,850 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [1]
2022-02-21 20:35:57,850 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[TransactionObject(transactionId=1, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=2033-01-01, amount=100.0), TransactionObject(transactionId=2, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2003-01-01, amount=10.0), TransactionObject(transactionId=1, transactionType=Withdraw, transactionDetail=Retail, transactionReference=reference, date=2000-01-01, amount=10.0), TransactionObject(transactionId=2, transactionType=Deposit, transactionDetail=Cash, transactionReference=reference, date=1999-10-10, amount=100.0)])
2022-02-21 20:35:57,856 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [2]
2022-02-21 20:35:57,856 INFO dLog [main] METHOD: getTransactionHistory
RETURNING: GetResponse(gotObject=[])
2022-02-21 20:35:57,860 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
ARGUMENTS: [-1]
2022-02-21 20:35:57,861 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.TransactionService
METHOD: getTransactionHistory
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAccountIdException
MESSAGE: 400 BAD_REQUEST "Invalid account Id Provided: -1"
2022-02-21 20:35:59,635 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [-1]
2022-02-21 20:35:59,640 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidWithdrawIdRequest
MESSAGE: 400 BAD_REQUEST "Withdraw not found, withdraw Id: -1"
2022-02-21 20:35:59,647 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=0.0)]
2022-02-21 20:35:59,648 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: 0.0"
2022-02-21 20:35:59,654 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-1.0)]
2022-02-21 20:35:59,654 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -1.0"
2022-02-21 20:35:59,658 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=-2123.0)]
2022-02-21 20:35:59,658 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidAmountException
MESSAGE: 400 BAD_REQUEST "Invalid amount, less than or equal to 0: -2123.0"
2022-02-21 20:35:59,664 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=null, reference=reference, amount=1.0)]
2022-02-21 20:35:59,665 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:35:59,670 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=, reference=reference, amount=1.0)]
2022-02-21 20:35:59,670 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:35:59,674 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, reference=reference, amount=1.0)]
2022-02-21 20:35:59,674 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf"
2022-02-21 20:35:59,678 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=a, reference=reference, amount=1.0)]
2022-02-21 20:35:59,679 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:35:59,684 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=null, amount=1.0)]
2022-02-21 20:35:59,684 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "NULL VALUE PROVIDED"
2022-02-21 20:35:59,689 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=, amount=1.0)]
2022-02-21 20:35:59,689 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): "
2022-02-21 20:35:59,694 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf, amount=1.0)]
2022-02-21 20:35:59,695 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid Text, too long (greater than 30): asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasf"
2022-02-21 20:35:59,700 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=a, amount=1.0)]
2022-02-21 20:35:59,700 ERROR dLog [main] CONTROLLER CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
THROWING EXCEPTION CLASS: class com.revature.thevault.service.exceptions.InvalidRequestException
MESSAGE: 400 BAD_REQUEST "Invalid text, too short (less than 1): a"
2022-02-21 20:35:59,704 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: createWithdrawal
ARGUMENTS: [WithdrawRequest(accountId=1, requestType=Retail, reference=reference, amount=12.22)]
2022-02-21 20:35:59,705 INFO dLog [main] METHOD: createWithdrawal
RETURNING: PostResponse(createdObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:35:59,710 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAlLUserWithdrawalsOfType
ARGUMENTS: [1, Retail]
2022-02-21 20:35:59,711 INFO dLog [main] METHOD: getAlLUserWithdrawalsOfType
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:35:59,716 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: deleteAllWithdraws
ARGUMENTS: [1]
2022-02-21 20:35:59,717 INFO dLog [main] METHOD: deleteAllWithdraws
RETURNING: DeleteResponse(deletedObject=[])
2022-02-21 20:35:59,721 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: getAllUserWithdrawals
ARGUMENTS: [1]
2022-02-21 20:35:59,722 INFO dLog [main] METHOD: getAllUserWithdrawals
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
2022-02-21 20:35:59,726 DEBUG dLog [main] CLASS: class com.revature.thevault.service.classes.WithdrawService
METHOD: findByWithdrawId
ARGUMENTS: [1]
2022-02-21 20:35:59,726 INFO dLog [main] METHOD: findByWithdrawId
RETURNING: GetResponse(gotObject=[WithdrawResponseObject(withdrawId=1, accountId=1, requestType=Retail, requestStatus=Pending, reference=reference, dateWithdraw=2022-02-21, amount=12.22)])
